### YamlMime:ApiPage
title: Class ImmutableRelationMock<T>
body:
- api1: Class ImmutableRelationMock<T>
  id: DataLinq_Instances_ImmutableRelationMock_1
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L27
  metadata:
    uid: DataLinq.Instances.ImmutableRelationMock`1
    commentId: T:DataLinq.Instances.ImmutableRelationMock`1
- facts:
  - name: Namespace
    value:
      text: DataLinq.Instances
      url: DataLinq.Instances.html
  - name: Assembly
    value: DataLinq.dll
- code: 'public class ImmutableRelationMock<T> : IImmutableRelation<T>, IEnumerable<T>, IEnumerable where T : IModelInstance'
- h4: Type Parameters
- parameters:
  - name: T
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: ImmutableRelationMock<T>
    url: DataLinq.Instances.ImmutableRelationMock-1.html
- h4: Implements
- list:
  - text: IImmutableRelation<T>
    url: DataLinq.Instances.IImmutableRelation-1.html
  - text: IEnumerable<T>
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - text: IEnumerable
    url: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: ImmutableRelationMock(IEnumerable<T>)
  id: DataLinq_Instances_ImmutableRelationMock_1__ctor_System_Collections_Generic_IEnumerable__0__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L31
  metadata:
    uid: DataLinq.Instances.ImmutableRelationMock`1.#ctor(System.Collections.Generic.IEnumerable{`0})
    commentId: M:DataLinq.Instances.ImmutableRelationMock`1.#ctor(System.Collections.Generic.IEnumerable{`0})
- code: public ImmutableRelationMock(IEnumerable<T> list)
- h4: Parameters
- parameters:
  - name: list
    type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - T
    - '>'
- h2: Properties
- api3: Count
  id: DataLinq_Instances_ImmutableRelationMock_1_Count
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L38
  metadata:
    uid: DataLinq.Instances.ImmutableRelationMock`1.Count
    commentId: P:DataLinq.Instances.ImmutableRelationMock`1.Count
- code: public int Count { get; }
- h4: Property Value
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: Keys
  id: DataLinq_Instances_ImmutableRelationMock_1_Keys
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L40
  metadata:
    uid: DataLinq.Instances.ImmutableRelationMock`1.Keys
    commentId: P:DataLinq.Instances.ImmutableRelationMock`1.Keys
- code: public ImmutableArray<IKey> Keys { get; }
- h4: Property Value
- parameters:
  - type:
    - text: ImmutableArray
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
    - <
    - text: IKey
      url: DataLinq.Instances.IKey.html
    - '>'
- api3: Values
  id: DataLinq_Instances_ImmutableRelationMock_1_Values
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L42
  metadata:
    uid: DataLinq.Instances.ImmutableRelationMock`1.Values
    commentId: P:DataLinq.Instances.ImmutableRelationMock`1.Values
- code: public ImmutableArray<T> Values { get; }
- h4: Property Value
- parameters:
  - type:
    - text: ImmutableArray
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
    - <
    - T
    - '>'
- api3: this[IKey]
  id: DataLinq_Instances_ImmutableRelationMock_1_Item_DataLinq_Instances_IKey_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L36
  metadata:
    uid: DataLinq.Instances.ImmutableRelationMock`1.Item(DataLinq.Instances.IKey)
    commentId: P:DataLinq.Instances.ImmutableRelationMock`1.Item(DataLinq.Instances.IKey)
- code: public T? this[IKey key] { get; }
- h4: Property Value
- parameters:
  - type:
    - T
    - '?'
- h2: Methods
- api3: AsEnumerable()
  id: DataLinq_Instances_ImmutableRelationMock_1_AsEnumerable
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L44
  metadata:
    uid: DataLinq.Instances.ImmutableRelationMock`1.AsEnumerable
    commentId: M:DataLinq.Instances.ImmutableRelationMock`1.AsEnumerable
- code: public IEnumerable<KeyValuePair<IKey, T>> AsEnumerable()
- h4: Returns
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - text: KeyValuePair
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
    - <
    - text: IKey
      url: DataLinq.Instances.IKey.html
    - ','
    - " "
    - T
    - '>'
    - '>'
- api3: Clear()
  id: DataLinq_Instances_ImmutableRelationMock_1_Clear
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L49
  metadata:
    uid: DataLinq.Instances.ImmutableRelationMock`1.Clear
    commentId: M:DataLinq.Instances.ImmutableRelationMock`1.Clear
- code: public void Clear()
- api3: ContainsKey(IKey)
  id: DataLinq_Instances_ImmutableRelationMock_1_ContainsKey_DataLinq_Instances_IKey_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L54
  metadata:
    uid: DataLinq.Instances.ImmutableRelationMock`1.ContainsKey(DataLinq.Instances.IKey)
    commentId: M:DataLinq.Instances.ImmutableRelationMock`1.ContainsKey(DataLinq.Instances.IKey)
- code: public bool ContainsKey(IKey key)
- h4: Parameters
- parameters:
  - name: key
    type:
    - text: IKey
      url: DataLinq.Instances.IKey.html
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: Get(IKey)
  id: DataLinq_Instances_ImmutableRelationMock_1_Get_DataLinq_Instances_IKey_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L59
  metadata:
    uid: DataLinq.Instances.ImmutableRelationMock`1.Get(DataLinq.Instances.IKey)
    commentId: M:DataLinq.Instances.ImmutableRelationMock`1.Get(DataLinq.Instances.IKey)
- code: public T? Get(IKey key)
- h4: Parameters
- parameters:
  - name: key
    type:
    - text: IKey
      url: DataLinq.Instances.IKey.html
- h4: Returns
- parameters:
  - type:
    - T
    - '?'
- api3: GetEnumerator()
  id: DataLinq_Instances_ImmutableRelationMock_1_GetEnumerator
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L64
  metadata:
    uid: DataLinq.Instances.ImmutableRelationMock`1.GetEnumerator
    commentId: M:DataLinq.Instances.ImmutableRelationMock`1.GetEnumerator
- markdown: Returns an enumerator that iterates through the collection.
- code: public IEnumerator<T> GetEnumerator()
- h4: Returns
- parameters:
  - type:
    - text: IEnumerator
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
    - <
    - T
    - '>'
    description: An enumerator that can be used to iterate through the collection.
- api3: ToFrozenDictionary()
  id: DataLinq_Instances_ImmutableRelationMock_1_ToFrozenDictionary
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L69
  metadata:
    uid: DataLinq.Instances.ImmutableRelationMock`1.ToFrozenDictionary
    commentId: M:DataLinq.Instances.ImmutableRelationMock`1.ToFrozenDictionary
- code: public FrozenDictionary<IKey, T> ToFrozenDictionary()
- h4: Returns
- parameters:
  - type:
    - text: FrozenDictionary
      url: https://learn.microsoft.com/dotnet/api/system.collections.frozen.frozendictionary-2
    - <
    - text: IKey
      url: DataLinq.Instances.IKey.html
    - ','
    - " "
    - T
    - '>'
languageId: csharp
