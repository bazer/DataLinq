### YamlMime:ApiPage
title: Class PluginHook
body:
- api1: Class PluginHook
  id: DataLinq_Metadata_PluginHook
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Metadata/PluginHook.cs#L34
  metadata:
    uid: DataLinq.Metadata.PluginHook
    commentId: T:DataLinq.Metadata.PluginHook
- facts:
  - name: Namespace
    value:
      text: DataLinq.Metadata
      url: DataLinq.Metadata.html
  - name: Assembly
    value: DataLinq.dll
- code: public static class PluginHook
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: PluginHook
    url: DataLinq.Metadata.PluginHook.html
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Fields
- api3: DatabaseProviders
  id: DataLinq_Metadata_PluginHook_DatabaseProviders
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Metadata/PluginHook.cs#L36
  metadata:
    uid: DataLinq.Metadata.PluginHook.DatabaseProviders
    commentId: F:DataLinq.Metadata.PluginHook.DatabaseProviders
- code: public static Dictionary<DatabaseType, IDatabaseProviderCreator> DatabaseProviders
- h4: Field Value
- parameters:
  - type:
    - text: Dictionary
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
    - <
    - DatabaseType
    - ','
    - " "
    - text: IDatabaseProviderCreator
      url: DataLinq.Metadata.IDatabaseProviderCreator.html
    - '>'
- api3: MetadataFromSqlFactories
  id: DataLinq_Metadata_PluginHook_MetadataFromSqlFactories
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Metadata/PluginHook.cs#L38
  metadata:
    uid: DataLinq.Metadata.PluginHook.MetadataFromSqlFactories
    commentId: F:DataLinq.Metadata.PluginHook.MetadataFromSqlFactories
- code: public static Dictionary<DatabaseType, IMetadataFromDatabaseFactoryCreator> MetadataFromSqlFactories
- h4: Field Value
- parameters:
  - type:
    - text: Dictionary
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
    - <
    - DatabaseType
    - ','
    - " "
    - text: IMetadataFromDatabaseFactoryCreator
      url: DataLinq.Metadata.IMetadataFromDatabaseFactoryCreator.html
    - '>'
- api3: SqlFromMetadataFactories
  id: DataLinq_Metadata_PluginHook_SqlFromMetadataFactories
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Metadata/PluginHook.cs#L37
  metadata:
    uid: DataLinq.Metadata.PluginHook.SqlFromMetadataFactories
    commentId: F:DataLinq.Metadata.PluginHook.SqlFromMetadataFactories
- code: public static Dictionary<DatabaseType, ISqlFromMetadataFactory> SqlFromMetadataFactories
- h4: Field Value
- parameters:
  - type:
    - text: Dictionary
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
    - <
    - DatabaseType
    - ','
    - " "
    - text: ISqlFromMetadataFactory
      url: DataLinq.Metadata.ISqlFromMetadataFactory.html
    - '>'
- h2: Methods
- api3: CreateDatabaseFromMetadata(DatabaseType, DatabaseDefinition, string, string, bool)
  id: DataLinq_Metadata_PluginHook_CreateDatabaseFromMetadata_DataLinq_DatabaseType_DataLinq_Metadata_DatabaseDefinition_System_String_System_String_System_Boolean_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Metadata/PluginHook.cs#L48
  metadata:
    uid: DataLinq.Metadata.PluginHook.CreateDatabaseFromMetadata(DataLinq.DatabaseType,DataLinq.Metadata.DatabaseDefinition,System.String,System.String,System.Boolean)
    commentId: M:DataLinq.Metadata.PluginHook.CreateDatabaseFromMetadata(DataLinq.DatabaseType,DataLinq.Metadata.DatabaseDefinition,System.String,System.String,System.Boolean)
- code: public static Option<int, IDLOptionFailure> CreateDatabaseFromMetadata(this DatabaseType type, DatabaseDefinition metadata, string databaseNameOrFile, string connectionString, bool foreignKeyRestrict)
- h4: Parameters
- parameters:
  - name: type
    type:
    - DatabaseType
  - name: metadata
    type:
    - DatabaseDefinition
  - name: databaseNameOrFile
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
  - name: connectionString
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
  - name: foreignKeyRestrict
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- h4: Returns
- parameters:
  - type:
    - Option
    - <
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    - ','
    - " "
    - IDLOptionFailure
    - '>'
- api3: CreateDatabaseFromSql(DatabaseType, Sql, string, string, bool)
  id: DataLinq_Metadata_PluginHook_CreateDatabaseFromSql_DataLinq_DatabaseType_DataLinq_Query_Sql_System_String_System_String_System_Boolean_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Metadata/PluginHook.cs#L40
  metadata:
    uid: DataLinq.Metadata.PluginHook.CreateDatabaseFromSql(DataLinq.DatabaseType,DataLinq.Query.Sql,System.String,System.String,System.Boolean)
    commentId: M:DataLinq.Metadata.PluginHook.CreateDatabaseFromSql(DataLinq.DatabaseType,DataLinq.Query.Sql,System.String,System.String,System.Boolean)
- code: public static Option<int, IDLOptionFailure> CreateDatabaseFromSql(this DatabaseType type, Sql sql, string databaseOrFile, string connectionString, bool foreignKeyRestrict)
- h4: Parameters
- parameters:
  - name: type
    type:
    - DatabaseType
  - name: sql
    type:
    - text: Sql
      url: DataLinq.Query.Sql.html
  - name: databaseOrFile
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
  - name: connectionString
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
  - name: foreignKeyRestrict
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- h4: Returns
- parameters:
  - type:
    - Option
    - <
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    - ','
    - " "
    - IDLOptionFailure
    - '>'
- api3: GenerateSql(DatabaseType, DatabaseDefinition, bool)
  id: DataLinq_Metadata_PluginHook_GenerateSql_DataLinq_DatabaseType_DataLinq_Metadata_DatabaseDefinition_System_Boolean_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Metadata/PluginHook.cs#L54
  metadata:
    uid: DataLinq.Metadata.PluginHook.GenerateSql(DataLinq.DatabaseType,DataLinq.Metadata.DatabaseDefinition,System.Boolean)
    commentId: M:DataLinq.Metadata.PluginHook.GenerateSql(DataLinq.DatabaseType,DataLinq.Metadata.DatabaseDefinition,System.Boolean)
- code: public static Option<Sql, IDLOptionFailure> GenerateSql(this DatabaseType type, DatabaseDefinition metadata, bool foreignKeyRestrict)
- h4: Parameters
- parameters:
  - name: type
    type:
    - DatabaseType
  - name: metadata
    type:
    - DatabaseDefinition
  - name: foreignKeyRestrict
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- h4: Returns
- parameters:
  - type:
    - Option
    - <
    - text: Sql
      url: DataLinq.Query.Sql.html
    - ','
    - " "
    - IDLOptionFailure
    - '>'
languageId: csharp
