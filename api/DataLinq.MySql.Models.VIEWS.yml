### YamlMime:ApiPage
title: Class VIEWS
body:
- api1: Class VIEWS
  id: DataLinq_MySql_Models_VIEWS
  metadata:
    uid: DataLinq.MySql.Models.VIEWS
    commentId: T:DataLinq.MySql.Models.VIEWS
- facts:
  - name: Namespace
    value:
      text: DataLinq.MySql.Models
      url: DataLinq.MySql.Models.html
  - name: Assembly
    value: DataLinq.MySql.dll
- code: >-
    [Definition("")]

    [View("VIEWS")]

    public abstract class VIEWS : Immutable<VIEWS, information_schema>, IImmutable<VIEWS>, IImmutableInstance<information_schema>, IImmutableInstance, IModelInstance<information_schema>, IModelInstance, IEquatable<Immutable<VIEWS, information_schema>>, IViewModel<information_schema>, IModel<information_schema>, IModel
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: Immutable<VIEWS, information_schema>
    url: DataLinq.Instances.Immutable-2.html
  - text: VIEWS
    url: DataLinq.MySql.Models.VIEWS.html
- h4: Derived
- list:
  - text: ImmutableVIEWS
    url: DataLinq.MySql.Models.ImmutableVIEWS.html
- h4: Implements
- list:
  - text: IImmutable<VIEWS>
    url: DataLinq.Instances.IImmutable-1.html
  - text: IImmutableInstance<information_schema>
    url: DataLinq.Instances.IImmutableInstance-1.html
  - text: IImmutableInstance
    url: DataLinq.Instances.IImmutableInstance.html
  - text: IModelInstance<information_schema>
    url: DataLinq.Instances.IModelInstance-1.html
  - text: IModelInstance
    url: DataLinq.Instances.IModelInstance.html
  - text: IEquatable<Immutable<VIEWS, information_schema>>
    url: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - IViewModel<information_schema>
  - IModel<information_schema>
  - IModel
- h4: Inherited Members
- list:
  - text: Immutable<VIEWS, information_schema>.relationKeys
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_relationKeys
  - text: Immutable<VIEWS, information_schema>.lazyValues
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_lazyValues
  - text: Immutable<VIEWS, information_schema>.this[ColumnDefinition]
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_Item_DataLinq_Metadata_ColumnDefinition_
  - text: Immutable<VIEWS, information_schema>.this[string]
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_Item_System_String_
  - text: Immutable<VIEWS, information_schema>.Metadata()
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_Metadata
  - text: Immutable<VIEWS, information_schema>.PrimaryKeys()
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_PrimaryKeys
  - text: Immutable<VIEWS, information_schema>.HasPrimaryKeysSet()
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_HasPrimaryKeysSet
  - text: Immutable<VIEWS, information_schema>.GetRowData()
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_GetRowData
  - text: Immutable<VIEWS, information_schema>.GetValues()
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_GetValues
  - text: Immutable<VIEWS, information_schema>.GetValues(IEnumerable<ColumnDefinition>)
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_GetValues_System_Collections_Generic_IEnumerable_DataLinq_Metadata_ColumnDefinition__
  - text: Immutable<VIEWS, information_schema>.ClearLazy()
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_ClearLazy
  - text: Immutable<VIEWS, information_schema>.GetLazy<V>(string, Func<V>)
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_GetLazy__1_System_String_System_Func___0__
  - text: Immutable<VIEWS, information_schema>.GetImmutableForeignKey<V>(string)
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_GetImmutableForeignKey__1_System_String_
  - text: Immutable<VIEWS, information_schema>.GetImmutableRelation<V>(string)
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_GetImmutableRelation__1_System_String_
  - text: Immutable<VIEWS, information_schema>.GetValue(string)
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_GetValue_System_String_
  - text: Immutable<VIEWS, information_schema>.GetNullableValue(string)
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_GetNullableValue_System_String_
  - text: Immutable<VIEWS, information_schema>.GetForeignKey<V>(string)
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_GetForeignKey__1_System_String_
  - text: Immutable<VIEWS, information_schema>.GetRelation<V>(string)
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_GetRelation__1_System_String_
  - text: Immutable<VIEWS, information_schema>.GetRelation<V>(RelationProperty)
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_GetRelation__1_DataLinq_Metadata_RelationProperty_
  - text: Immutable<VIEWS, information_schema>.GetDataSource()
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_GetDataSource
  - text: Immutable<VIEWS, information_schema>.Equals(Immutable<VIEWS, information_schema>?)
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_Equals_DataLinq_Instances_Immutable__0__1__
  - text: Immutable<VIEWS, information_schema>.Equals(object?)
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_Equals_System_Object_
  - text: Immutable<VIEWS, information_schema>.GetHashCode()
    url: DataLinq.Instances.Immutable-2.html#DataLinq_Instances_Immutable_2_GetHashCode
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h4: Extension Methods
- list:
  - text: IModelExtensions.Delete<VIEWS>(VIEWS)
    url: DataLinq.IModelExtensions.html#DataLinq_IModelExtensions_Delete__1___0_
  - text: IModelExtensions.Delete<VIEWS>(VIEWS, Transaction)
    url: DataLinq.IModelExtensions.html#DataLinq_IModelExtensions_Delete__1___0_DataLinq_Mutation_Transaction_
- h2: Constructors
- api3: VIEWS(RowData, DataSourceAccess)
  id: DataLinq_MySql_Models_VIEWS__ctor_DataLinq_Instances_RowData_DataLinq_Mutation_DataSourceAccess_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/Models/information_schema/Views/VIEWS.cs#L10
  metadata:
    uid: DataLinq.MySql.Models.VIEWS.#ctor(DataLinq.Instances.RowData,DataLinq.Mutation.DataSourceAccess)
    commentId: M:DataLinq.MySql.Models.VIEWS.#ctor(DataLinq.Instances.RowData,DataLinq.Mutation.DataSourceAccess)
- code: protected VIEWS(RowData rowData, DataSourceAccess dataSource)
- h4: Parameters
- parameters:
  - name: rowData
    type:
    - text: RowData
      url: DataLinq.Instances.RowData.html
  - name: dataSource
    type:
    - text: DataSourceAccess
      url: DataLinq.Mutation.DataSourceAccess.html
- h2: Properties
- api3: ALGORITHM
  id: DataLinq_MySql_Models_VIEWS_ALGORITHM
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/Models/information_schema/Views/VIEWS.cs#L14
  metadata:
    uid: DataLinq.MySql.Models.VIEWS.ALGORITHM
    commentId: P:DataLinq.MySql.Models.VIEWS.ALGORITHM
- code: >-
    [Type(DatabaseType.MySQL, "varchar", 10)]

    [Column("ALGORITHM")]

    public abstract string ALGORITHM { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: CHARACTER_SET_CLIENT
  id: DataLinq_MySql_Models_VIEWS_CHARACTER_SET_CLIENT
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/Models/information_schema/Views/VIEWS.cs#L18
  metadata:
    uid: DataLinq.MySql.Models.VIEWS.CHARACTER_SET_CLIENT
    commentId: P:DataLinq.MySql.Models.VIEWS.CHARACTER_SET_CLIENT
- code: >-
    [Type(DatabaseType.MySQL, "varchar", 32)]

    [Column("CHARACTER_SET_CLIENT")]

    public abstract string CHARACTER_SET_CLIENT { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: CHECK_OPTION
  id: DataLinq_MySql_Models_VIEWS_CHECK_OPTION
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/Models/information_schema/Views/VIEWS.cs#L22
  metadata:
    uid: DataLinq.MySql.Models.VIEWS.CHECK_OPTION
    commentId: P:DataLinq.MySql.Models.VIEWS.CHECK_OPTION
- code: >-
    [Type(DatabaseType.MySQL, "varchar", 8)]

    [Column("CHECK_OPTION")]

    public abstract string CHECK_OPTION { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: COLLATION_CONNECTION
  id: DataLinq_MySql_Models_VIEWS_COLLATION_CONNECTION
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/Models/information_schema/Views/VIEWS.cs#L26
  metadata:
    uid: DataLinq.MySql.Models.VIEWS.COLLATION_CONNECTION
    commentId: P:DataLinq.MySql.Models.VIEWS.COLLATION_CONNECTION
- code: >-
    [Type(DatabaseType.MySQL, "varchar", 32)]

    [Column("COLLATION_CONNECTION")]

    public abstract string COLLATION_CONNECTION { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: DEFINER
  id: DataLinq_MySql_Models_VIEWS_DEFINER
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/Models/information_schema/Views/VIEWS.cs#L30
  metadata:
    uid: DataLinq.MySql.Models.VIEWS.DEFINER
    commentId: P:DataLinq.MySql.Models.VIEWS.DEFINER
- code: >-
    [Type(DatabaseType.MySQL, "varchar", 189)]

    [Column("DEFINER")]

    public abstract string DEFINER { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: IS_UPDATABLE
  id: DataLinq_MySql_Models_VIEWS_IS_UPDATABLE
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/Models/information_schema/Views/VIEWS.cs#L34
  metadata:
    uid: DataLinq.MySql.Models.VIEWS.IS_UPDATABLE
    commentId: P:DataLinq.MySql.Models.VIEWS.IS_UPDATABLE
- code: >-
    [Type(DatabaseType.MySQL, "varchar", 3)]

    [Column("IS_UPDATABLE")]

    public abstract string IS_UPDATABLE { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: SECURITY_TYPE
  id: DataLinq_MySql_Models_VIEWS_SECURITY_TYPE
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/Models/information_schema/Views/VIEWS.cs#L38
  metadata:
    uid: DataLinq.MySql.Models.VIEWS.SECURITY_TYPE
    commentId: P:DataLinq.MySql.Models.VIEWS.SECURITY_TYPE
- code: >-
    [Type(DatabaseType.MySQL, "varchar", 7)]

    [Column("SECURITY_TYPE")]

    public abstract string SECURITY_TYPE { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: TABLE_CATALOG
  id: DataLinq_MySql_Models_VIEWS_TABLE_CATALOG
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/Models/information_schema/Views/VIEWS.cs#L42
  metadata:
    uid: DataLinq.MySql.Models.VIEWS.TABLE_CATALOG
    commentId: P:DataLinq.MySql.Models.VIEWS.TABLE_CATALOG
- code: >-
    [Type(DatabaseType.MySQL, "varchar", 512)]

    [Column("TABLE_CATALOG")]

    public abstract string TABLE_CATALOG { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: TABLE_NAME
  id: DataLinq_MySql_Models_VIEWS_TABLE_NAME
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/Models/information_schema/Views/VIEWS.cs#L46
  metadata:
    uid: DataLinq.MySql.Models.VIEWS.TABLE_NAME
    commentId: P:DataLinq.MySql.Models.VIEWS.TABLE_NAME
- code: >-
    [Type(DatabaseType.MySQL, "varchar", 64)]

    [Column("TABLE_NAME")]

    public abstract string TABLE_NAME { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: TABLE_SCHEMA
  id: DataLinq_MySql_Models_VIEWS_TABLE_SCHEMA
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/Models/information_schema/Views/VIEWS.cs#L50
  metadata:
    uid: DataLinq.MySql.Models.VIEWS.TABLE_SCHEMA
    commentId: P:DataLinq.MySql.Models.VIEWS.TABLE_SCHEMA
- code: >-
    [Type(DatabaseType.MySQL, "varchar", 64)]

    [Column("TABLE_SCHEMA")]

    public abstract string TABLE_SCHEMA { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: VIEW_DEFINITION
  id: DataLinq_MySql_Models_VIEWS_VIEW_DEFINITION
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/Models/information_schema/Views/VIEWS.cs#L54
  metadata:
    uid: DataLinq.MySql.Models.VIEWS.VIEW_DEFINITION
    commentId: P:DataLinq.MySql.Models.VIEWS.VIEW_DEFINITION
- code: >-
    [Type(DatabaseType.MySQL, "longtext", 4294967295)]

    [Column("VIEW_DEFINITION")]

    public abstract string VIEW_DEFINITION { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
languageId: csharp
