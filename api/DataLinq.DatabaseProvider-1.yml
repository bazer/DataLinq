### YamlMime:ApiPage
title: Class DatabaseProvider<T>
body:
- api1: Class DatabaseProvider<T>
  id: DataLinq_DatabaseProvider_1
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Database/DatabaseProvider.cs#L21
  metadata:
    uid: DataLinq.DatabaseProvider`1
    commentId: T:DataLinq.DatabaseProvider`1
- facts:
  - name: Namespace
    value:
      text: DataLinq
      url: DataLinq.html
  - name: Assembly
    value: DataLinq.dll
- markdown: Provides a generic abstract database provider for a specific type of database model.
- code: 'public abstract class DatabaseProvider<T> : DatabaseProvider, IDatabaseProvider, IDisposable where T : class, IDatabaseModel'
- h4: Type Parameters
- parameters:
  - name: T
    description: The type of the database model.
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: DatabaseProvider
    url: DataLinq.DatabaseProvider.html
  - text: DatabaseProvider<T>
    url: DataLinq.DatabaseProvider-1.html
- h4: Implements
- list:
  - text: IDatabaseProvider
    url: DataLinq.Interfaces.IDatabaseProvider.html
  - text: IDisposable
    url: https://learn.microsoft.com/dotnet/api/system.idisposable
- h4: Inherited Members
- list:
  - text: DatabaseProvider.DatabaseName
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_DatabaseName
  - text: DatabaseProvider.CsModelType
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_CsModelType
  - text: DatabaseProvider.DatabaseType
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_DatabaseType
  - text: DatabaseProvider.LoggingConfiguration
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_LoggingConfiguration
  - text: DatabaseProvider.Constants
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_Constants
  - text: DatabaseProvider.ConnectionString
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_ConnectionString
  - text: DatabaseProvider.DatabaseAccess
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_DatabaseAccess
  - text: DatabaseProvider.ReadOnlyAccess
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_ReadOnlyAccess
  - text: DatabaseProvider.Metadata
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_Metadata
  - text: DatabaseProvider.State
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_State
  - text: DatabaseProvider.GetTableCache(TableDefinition)
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_GetTableCache_DataLinq_Metadata_TableDefinition_
  - text: DatabaseProvider.StartTransaction(TransactionType)
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_StartTransaction_DataLinq_Mutation_TransactionType_
  - text: DatabaseProvider.Commit<M>(Func<Transaction, M>)
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_Commit__1_System_Func_DataLinq_Mutation_Transaction___0__
  - text: DatabaseProvider.Commit(Action<Transaction>)
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_Commit_System_Action_DataLinq_Mutation_Transaction__
  - text: DatabaseProvider.AttachTransaction(IDbTransaction, TransactionType)
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_AttachTransaction_System_Data_IDbTransaction_DataLinq_Mutation_TransactionType_
  - text: DatabaseProvider.ToDbCommand(IQuery)
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_ToDbCommand_DataLinq_Query_IQuery_
  - text: DatabaseProvider.GetLastIdQuery()
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_GetLastIdQuery
  - text: DatabaseProvider.GetParameter(Sql, string, object?)
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_GetParameter_DataLinq_Query_Sql_System_String_System_Object_
  - text: DatabaseProvider.GetParameterValue(Sql, string)
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_GetParameterValue_DataLinq_Query_Sql_System_String_
  - text: DatabaseProvider.GetParameterComparison(Sql, string, Relation, string[])
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_GetParameterComparison_DataLinq_Query_Sql_System_String_DataLinq_Query_Relation_System_String___
  - text: DatabaseProvider.GetLimitOffset(Sql, int?, int?)
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_GetLimitOffset_DataLinq_Query_Sql_System_Nullable_System_Int32__System_Nullable_System_Int32__
  - text: DatabaseProvider.GetTableName(Sql, string, string?)
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_GetTableName_DataLinq_Query_Sql_System_String_System_String_
  - text: DatabaseProvider.GetCreateSql()
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_GetCreateSql
  - text: DatabaseProvider.GetNewDatabaseTransaction(TransactionType)
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_GetNewDatabaseTransaction_DataLinq_Mutation_TransactionType_
  - text: DatabaseProvider.AttachDatabaseTransaction(IDbTransaction, TransactionType)
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_AttachDatabaseTransaction_System_Data_IDbTransaction_DataLinq_Mutation_TransactionType_
  - text: DatabaseProvider.DatabaseExists(string?)
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_DatabaseExists_System_String_
  - text: DatabaseProvider.FileOrServerExists()
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_FileOrServerExists
  - text: DatabaseProvider.GetWriter()
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_GetWriter
  - text: DatabaseProvider.Dispose()
    url: DataLinq.DatabaseProvider.html#DataLinq_DatabaseProvider_Dispose
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: DatabaseProvider(string, DatabaseType, DataLinqLoggingConfiguration)
  id: DataLinq_DatabaseProvider_1__ctor_System_String_DataLinq_DatabaseType_DataLinq_Logging_DataLinqLoggingConfiguration_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Database/DatabaseProvider.cs#L36
  metadata:
    uid: DataLinq.DatabaseProvider`1.#ctor(System.String,DataLinq.DatabaseType,DataLinq.Logging.DataLinqLoggingConfiguration)
    commentId: M:DataLinq.DatabaseProvider`1.#ctor(System.String,DataLinq.DatabaseType,DataLinq.Logging.DataLinqLoggingConfiguration)
- markdown: Initializes a new instance of the DatabaseProvider with the specified connection string and database type.
- code: protected DatabaseProvider(string connectionString, DatabaseType databaseType, DataLinqLoggingConfiguration loggingConfiguration)
- h4: Parameters
- parameters:
  - name: connectionString
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The connection string to the database.
  - name: databaseType
    type:
    - DatabaseType
    description: The type of the database.
  - name: loggingConfiguration
    type:
    - text: DataLinqLoggingConfiguration
      url: DataLinq.Logging.DataLinqLoggingConfiguration.html
- api3: DatabaseProvider(string, DatabaseType, DataLinqLoggingConfiguration, string)
  id: DataLinq_DatabaseProvider_1__ctor_System_String_DataLinq_DatabaseType_DataLinq_Logging_DataLinqLoggingConfiguration_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Database/DatabaseProvider.cs#L47
  metadata:
    uid: DataLinq.DatabaseProvider`1.#ctor(System.String,DataLinq.DatabaseType,DataLinq.Logging.DataLinqLoggingConfiguration,System.String)
    commentId: M:DataLinq.DatabaseProvider`1.#ctor(System.String,DataLinq.DatabaseType,DataLinq.Logging.DataLinqLoggingConfiguration,System.String)
- markdown: Initializes a new instance of the DatabaseProvider with the specified connection string, database type, and database name.
- code: protected DatabaseProvider(string connectionString, DatabaseType databaseType, DataLinqLoggingConfiguration loggingConfiguration, string databaseName)
- h4: Parameters
- parameters:
  - name: connectionString
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The connection string to the database.
  - name: databaseType
    type:
    - DatabaseType
    description: The type of the database.
  - name: loggingConfiguration
    type:
    - text: DataLinqLoggingConfiguration
      url: DataLinq.Logging.DataLinqLoggingConfiguration.html
  - name: databaseName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The name of the database.
- h2: Properties
- api3: TypedReadOnlyAccess
  id: DataLinq_DatabaseProvider_1_TypedReadOnlyAccess
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Database/DatabaseProvider.cs#L29
  metadata:
    uid: DataLinq.DatabaseProvider`1.TypedReadOnlyAccess
    commentId: P:DataLinq.DatabaseProvider`1.TypedReadOnlyAccess
- code: public ReadOnlyAccess<T> TypedReadOnlyAccess { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: ReadOnlyAccess
      url: DataLinq.Mutation.ReadOnlyAccess-1.html
    - <
    - T
    - '>'
languageId: csharp
metadata:
  description: Provides a generic abstract database provider for a specific type of database model.
