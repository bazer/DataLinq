### YamlMime:ApiPage
title: Class RowData
body:
- api1: Class RowData
  id: DataLinq_Instances_RowData
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/RowData.cs#L23
  metadata:
    uid: DataLinq.Instances.RowData
    commentId: T:DataLinq.Instances.RowData
- facts:
  - name: Namespace
    value:
      text: DataLinq.Instances
      url: DataLinq.Instances.html
  - name: Assembly
    value: DataLinq.dll
- code: 'public class RowData : IRowData, IEquatable<RowData>'
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: RowData
    url: DataLinq.Instances.RowData.html
- h4: Implements
- list:
  - text: IRowData
    url: DataLinq.Instances.IRowData.html
  - text: IEquatable<RowData>
    url: https://learn.microsoft.com/dotnet/api/system.iequatable-1
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: RowData(IDataLinqDataReader, TableDefinition, ReadOnlySpan<ColumnDefinition>)
  id: DataLinq_Instances_RowData__ctor_DataLinq_IDataLinqDataReader_DataLinq_Metadata_TableDefinition_System_ReadOnlySpan_DataLinq_Metadata_ColumnDefinition__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/RowData.cs#L25
  metadata:
    uid: DataLinq.Instances.RowData.#ctor(DataLinq.IDataLinqDataReader,DataLinq.Metadata.TableDefinition,System.ReadOnlySpan{DataLinq.Metadata.ColumnDefinition})
    commentId: M:DataLinq.Instances.RowData.#ctor(DataLinq.IDataLinqDataReader,DataLinq.Metadata.TableDefinition,System.ReadOnlySpan{DataLinq.Metadata.ColumnDefinition})
- code: public RowData(IDataLinqDataReader reader, TableDefinition table, ReadOnlySpan<ColumnDefinition> columns)
- h4: Parameters
- parameters:
  - name: reader
    type:
    - text: IDataLinqDataReader
      url: DataLinq.IDataLinqDataReader.html
  - name: table
    type:
    - TableDefinition
  - name: columns
    type:
    - text: ReadOnlySpan
      url: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
    - <
    - ColumnDefinition
    - '>'
- h2: Properties
- api3: Data
  id: DataLinq_Instances_RowData_Data
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/RowData.cs#L31
  metadata:
    uid: DataLinq.Instances.RowData.Data
    commentId: P:DataLinq.Instances.RowData.Data
- code: protected Dictionary<ColumnDefinition, object?> Data { get; }
- h4: Property Value
- parameters:
  - type:
    - text: Dictionary
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
    - <
    - ColumnDefinition
    - ','
    - " "
    - text: object
      url: https://learn.microsoft.com/dotnet/api/system.object
    - '?'
    - '>'
- api3: Size
  id: DataLinq_Instances_RowData_Size
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/RowData.cs#L35
  metadata:
    uid: DataLinq.Instances.RowData.Size
    commentId: P:DataLinq.Instances.RowData.Size
- code: public int Size { get; }
- h4: Property Value
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: Table
  id: DataLinq_Instances_RowData_Table
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/RowData.cs#L33
  metadata:
    uid: DataLinq.Instances.RowData.Table
    commentId: P:DataLinq.Instances.RowData.Table
- code: public TableDefinition Table { get; }
- h4: Property Value
- parameters:
  - type:
    - TableDefinition
- api3: this[ColumnDefinition]
  id: DataLinq_Instances_RowData_Item_DataLinq_Metadata_ColumnDefinition_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/RowData.cs#L37
  metadata:
    uid: DataLinq.Instances.RowData.Item(DataLinq.Metadata.ColumnDefinition)
    commentId: P:DataLinq.Instances.RowData.Item(DataLinq.Metadata.ColumnDefinition)
- code: public object? this[ColumnDefinition column] { get; }
- h4: Property Value
- parameters:
  - type:
    - text: object
      url: https://learn.microsoft.com/dotnet/api/system.object
    - '?'
- h2: Methods
- api3: Equals(RowData?)
  id: DataLinq_Instances_RowData_Equals_DataLinq_Instances_RowData_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/RowData.cs#L97
  metadata:
    uid: DataLinq.Instances.RowData.Equals(DataLinq.Instances.RowData)
    commentId: M:DataLinq.Instances.RowData.Equals(DataLinq.Instances.RowData)
- markdown: Indicates whether the current object is equal to another object of the same type.
- code: public bool Equals(RowData? other)
- h4: Parameters
- parameters:
  - name: other
    type:
    - text: RowData
      url: DataLinq.Instances.RowData.html
    - '?'
    description: An object to compare with this object.
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
- api3: Equals(object?)
  id: DataLinq_Instances_RowData_Equals_System_Object_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/RowData.cs#L111
  metadata:
    uid: DataLinq.Instances.RowData.Equals(System.Object)
    commentId: M:DataLinq.Instances.RowData.Equals(System.Object)
- markdown: Determines whether the specified object is equal to the current object.
- code: public override bool Equals(object? obj)
- h4: Parameters
- parameters:
  - name: obj
    type:
    - text: object
      url: https://learn.microsoft.com/dotnet/api/system.object
    - '?'
    description: The object to compare with the current object.
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
- api3: GetColumnAndValues()
  id: DataLinq_Instances_RowData_GetColumnAndValues
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/RowData.cs#L47
  metadata:
    uid: DataLinq.Instances.RowData.GetColumnAndValues
    commentId: M:DataLinq.Instances.RowData.GetColumnAndValues
- code: public IEnumerable<KeyValuePair<ColumnDefinition, object?>> GetColumnAndValues()
- h4: Returns
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - text: KeyValuePair
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
    - <
    - ColumnDefinition
    - ','
    - " "
    - text: object
      url: https://learn.microsoft.com/dotnet/api/system.object
    - '?'
    - '>'
    - '>'
- api3: GetColumnAndValues(IEnumerable<ColumnDefinition>)
  id: DataLinq_Instances_RowData_GetColumnAndValues_System_Collections_Generic_IEnumerable_DataLinq_Metadata_ColumnDefinition__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/RowData.cs#L52
  metadata:
    uid: DataLinq.Instances.RowData.GetColumnAndValues(System.Collections.Generic.IEnumerable{DataLinq.Metadata.ColumnDefinition})
    commentId: M:DataLinq.Instances.RowData.GetColumnAndValues(System.Collections.Generic.IEnumerable{DataLinq.Metadata.ColumnDefinition})
- code: public IEnumerable<KeyValuePair<ColumnDefinition, object?>> GetColumnAndValues(IEnumerable<ColumnDefinition> columns)
- h4: Parameters
- parameters:
  - name: columns
    type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - ColumnDefinition
    - '>'
- h4: Returns
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - text: KeyValuePair
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
    - <
    - ColumnDefinition
    - ','
    - " "
    - text: object
      url: https://learn.microsoft.com/dotnet/api/system.object
    - '?'
    - '>'
    - '>'
- api3: GetHashCode()
  id: DataLinq_Instances_RowData_GetHashCode
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/RowData.cs#L116
  metadata:
    uid: DataLinq.Instances.RowData.GetHashCode
    commentId: M:DataLinq.Instances.RowData.GetHashCode
- markdown: Serves as the default hash function.
- code: public override int GetHashCode()
- h4: Returns
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: A hash code for the current object.
- api3: GetValue(ColumnDefinition)
  id: DataLinq_Instances_RowData_GetValue_DataLinq_Metadata_ColumnDefinition_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/RowData.cs#L39
  metadata:
    uid: DataLinq.Instances.RowData.GetValue(DataLinq.Metadata.ColumnDefinition)
    commentId: M:DataLinq.Instances.RowData.GetValue(DataLinq.Metadata.ColumnDefinition)
- code: public object? GetValue(ColumnDefinition column)
- h4: Parameters
- parameters:
  - name: column
    type:
    - ColumnDefinition
- h4: Returns
- parameters:
  - type:
    - text: object
      url: https://learn.microsoft.com/dotnet/api/system.object
    - '?'
- api3: GetValues(IEnumerable<ColumnDefinition>)
  id: DataLinq_Instances_RowData_GetValues_System_Collections_Generic_IEnumerable_DataLinq_Metadata_ColumnDefinition__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/RowData.cs#L58
  metadata:
    uid: DataLinq.Instances.RowData.GetValues(System.Collections.Generic.IEnumerable{DataLinq.Metadata.ColumnDefinition})
    commentId: M:DataLinq.Instances.RowData.GetValues(System.Collections.Generic.IEnumerable{DataLinq.Metadata.ColumnDefinition})
- code: public IEnumerable<object?> GetValues(IEnumerable<ColumnDefinition> columns)
- h4: Parameters
- parameters:
  - name: columns
    type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - ColumnDefinition
    - '>'
- h4: Returns
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - text: object
      url: https://learn.microsoft.com/dotnet/api/system.object
    - '?'
    - '>'
languageId: csharp
