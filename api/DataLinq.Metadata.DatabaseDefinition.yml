### YamlMime:ApiPage
title: Class DatabaseDefinition
body:
- api1: Class DatabaseDefinition
  id: DataLinq_Metadata_DatabaseDefinition
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L10
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition
    commentId: T:DataLinq.Metadata.DatabaseDefinition
- facts:
  - name: Namespace
    value:
      text: DataLinq.Metadata
      url: DataLinq.Metadata.html
  - name: Assembly
    value: DataLinq.Core.dll
- code: 'public class DatabaseDefinition : IDefinition'
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: DatabaseDefinition
    url: DataLinq.Metadata.DatabaseDefinition.html
- h4: Implements
- list:
  - text: IDefinition
    url: DataLinq.Interfaces.IDefinition.html
- h4: Inherited Members
- list:
  - text: object.Equals(object)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object, object)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object, object)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h4: Extension Methods
- list:
  - text: MetadataFactory.ParseAttributes(DatabaseDefinition)
    url: DataLinq.Core.Factories.MetadataFactory.html#DataLinq_Core_Factories_MetadataFactory_ParseAttributes_DataLinq_Metadata_DatabaseDefinition_
- h2: Constructors
- api3: DatabaseDefinition(string, CsTypeDeclaration, string?)
  id: DataLinq_Metadata_DatabaseDefinition__ctor_System_String_DataLinq_Metadata_CsTypeDeclaration_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L14
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.#ctor(System.String,DataLinq.Metadata.CsTypeDeclaration,System.String)
    commentId: M:DataLinq.Metadata.DatabaseDefinition.#ctor(System.String,DataLinq.Metadata.CsTypeDeclaration,System.String)
- code: public DatabaseDefinition(string name, CsTypeDeclaration csType, string? dbName = null)
- h4: Parameters
- parameters:
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
  - name: csType
    type:
    - text: CsTypeDeclaration
      url: DataLinq.Metadata.CsTypeDeclaration.html
  - name: dbName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    optional: true
- h2: Properties
- api3: Attributes
  id: DataLinq_Metadata_DatabaseDefinition_Attributes
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L31
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.Attributes
    commentId: P:DataLinq.Metadata.DatabaseDefinition.Attributes
- code: public Attribute[] Attributes { get; }
- h4: Property Value
- parameters:
  - type:
    - text: Attribute
      url: https://learn.microsoft.com/dotnet/api/system.attribute
    - '['
    - ']'
- api3: CacheCleanup
  id: DataLinq_Metadata_DatabaseDefinition_CacheCleanup
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L37
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.CacheCleanup
    commentId: P:DataLinq.Metadata.DatabaseDefinition.CacheCleanup
- code: public List<(CacheCleanupType cleanupType, long amount)> CacheCleanup { get; }
- h4: Property Value
- parameters:
  - type:
    - text: List
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
    - <
    - (
    - text: CacheCleanupType
      url: DataLinq.Attributes.CacheCleanupType.html
    - " "
    - text: cleanupType
      url: https://learn.microsoft.com/dotnet/api/system.valuetuple-datalinq.attributes.cachecleanuptype,system.int64-.cleanuptype
    - ','
    - " "
    - text: long
      url: https://learn.microsoft.com/dotnet/api/system.int64
    - " "
    - text: amount
      url: https://learn.microsoft.com/dotnet/api/system.valuetuple-datalinq.attributes.cachecleanuptype,system.int64-.amount
    - )
    - '>'
- api3: CacheLimits
  id: DataLinq_Metadata_DatabaseDefinition_CacheLimits
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L35
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.CacheLimits
    commentId: P:DataLinq.Metadata.DatabaseDefinition.CacheLimits
- code: public List<(CacheLimitType limitType, long amount)> CacheLimits { get; }
- h4: Property Value
- parameters:
  - type:
    - text: List
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
    - <
    - (
    - text: CacheLimitType
      url: DataLinq.Attributes.CacheLimitType.html
    - " "
    - text: limitType
      url: https://learn.microsoft.com/dotnet/api/system.valuetuple-datalinq.attributes.cachelimittype,system.int64-.limittype
    - ','
    - " "
    - text: long
      url: https://learn.microsoft.com/dotnet/api/system.int64
    - " "
    - text: amount
      url: https://learn.microsoft.com/dotnet/api/system.valuetuple-datalinq.attributes.cachelimittype,system.int64-.amount
    - )
    - '>'
- api3: CsFile
  id: DataLinq_Metadata_DatabaseDefinition_CsFile
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L27
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.CsFile
    commentId: P:DataLinq.Metadata.DatabaseDefinition.CsFile
- code: public CsFileDeclaration? CsFile { get; }
- h4: Property Value
- parameters:
  - type:
    - text: CsFileDeclaration
      url: DataLinq.Metadata.CsFileDeclaration.html
    - '?'
- api3: CsType
  id: DataLinq_Metadata_DatabaseDefinition_CsType
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L25
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.CsType
    commentId: P:DataLinq.Metadata.DatabaseDefinition.CsType
- code: public CsTypeDeclaration CsType { get; }
- h4: Property Value
- parameters:
  - type:
    - text: CsTypeDeclaration
      url: DataLinq.Metadata.CsTypeDeclaration.html
- api3: DbName
  id: DataLinq_Metadata_DatabaseDefinition_DbName
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L23
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.DbName
    commentId: P:DataLinq.Metadata.DatabaseDefinition.DbName
- code: public string DbName { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: IndexCache
  id: DataLinq_Metadata_DatabaseDefinition_IndexCache
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L36
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.IndexCache
    commentId: P:DataLinq.Metadata.DatabaseDefinition.IndexCache
- code: public List<(IndexCacheType indexCacheType, int? amount)> IndexCache { get; }
- h4: Property Value
- parameters:
  - type:
    - text: List
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
    - <
    - (
    - text: IndexCacheType
      url: DataLinq.Attributes.IndexCacheType.html
    - " "
    - text: indexCacheType
      url: https://learn.microsoft.com/dotnet/api/system.valuetuple-datalinq.attributes.indexcachetype,system.nullable-system.int32--.indexcachetype
    - ','
    - " "
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    - '?'
    - " "
    - text: amount
      url: https://learn.microsoft.com/dotnet/api/system.valuetuple-datalinq.attributes.indexcachetype,system.nullable-system.int32--.amount
    - )
    - '>'
- api3: LoadedDatabases
  id: DataLinq_Metadata_DatabaseDefinition_LoadedDatabases
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L12
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.LoadedDatabases
    commentId: P:DataLinq.Metadata.DatabaseDefinition.LoadedDatabases
- code: public static ConcurrentDictionary<Type, DatabaseDefinition> LoadedDatabases { get; }
- h4: Property Value
- parameters:
  - type:
    - text: ConcurrentDictionary
      url: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2
    - <
    - text: Type
      url: https://learn.microsoft.com/dotnet/api/system.type
    - ','
    - " "
    - text: DatabaseDefinition
      url: DataLinq.Metadata.DatabaseDefinition.html
    - '>'
- api3: Name
  id: DataLinq_Metadata_DatabaseDefinition_Name
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L21
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.Name
    commentId: P:DataLinq.Metadata.DatabaseDefinition.Name
- code: public string Name { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: TableModels
  id: DataLinq_Metadata_DatabaseDefinition_TableModels
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L33
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.TableModels
    commentId: P:DataLinq.Metadata.DatabaseDefinition.TableModels
- code: public TableModel[] TableModels { get; }
- h4: Property Value
- parameters:
  - type:
    - text: TableModel
      url: DataLinq.Metadata.TableModel.html
    - '['
    - ']'
- api3: UseCache
  id: DataLinq_Metadata_DatabaseDefinition_UseCache
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L29
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.UseCache
    commentId: P:DataLinq.Metadata.DatabaseDefinition.UseCache
- code: public bool UseCache { get; }
- h4: Property Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- h2: Methods
- api3: SetAttributes(IEnumerable<Attribute>)
  id: DataLinq_Metadata_DatabaseDefinition_SetAttributes_System_Collections_Generic_IEnumerable_System_Attribute__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L32
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.SetAttributes(System.Collections.Generic.IEnumerable{System.Attribute})
    commentId: M:DataLinq.Metadata.DatabaseDefinition.SetAttributes(System.Collections.Generic.IEnumerable{System.Attribute})
- code: public void SetAttributes(IEnumerable<Attribute> attributes)
- h4: Parameters
- parameters:
  - name: attributes
    type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - text: Attribute
      url: https://learn.microsoft.com/dotnet/api/system.attribute
    - '>'
- api3: SetCache(bool)
  id: DataLinq_Metadata_DatabaseDefinition_SetCache_System_Boolean_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L30
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.SetCache(System.Boolean)
    commentId: M:DataLinq.Metadata.DatabaseDefinition.SetCache(System.Boolean)
- code: public void SetCache(bool useCache)
- h4: Parameters
- parameters:
  - name: useCache
    type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: SetCsFile(CsFileDeclaration)
  id: DataLinq_Metadata_DatabaseDefinition_SetCsFile_DataLinq_Metadata_CsFileDeclaration_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L28
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.SetCsFile(DataLinq.Metadata.CsFileDeclaration)
    commentId: M:DataLinq.Metadata.DatabaseDefinition.SetCsFile(DataLinq.Metadata.CsFileDeclaration)
- code: public void SetCsFile(CsFileDeclaration csFile)
- h4: Parameters
- parameters:
  - name: csFile
    type:
    - text: CsFileDeclaration
      url: DataLinq.Metadata.CsFileDeclaration.html
- api3: SetCsType(CsTypeDeclaration)
  id: DataLinq_Metadata_DatabaseDefinition_SetCsType_DataLinq_Metadata_CsTypeDeclaration_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L26
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.SetCsType(DataLinq.Metadata.CsTypeDeclaration)
    commentId: M:DataLinq.Metadata.DatabaseDefinition.SetCsType(DataLinq.Metadata.CsTypeDeclaration)
- code: public void SetCsType(CsTypeDeclaration csType)
- h4: Parameters
- parameters:
  - name: csType
    type:
    - text: CsTypeDeclaration
      url: DataLinq.Metadata.CsTypeDeclaration.html
- api3: SetDbName(string)
  id: DataLinq_Metadata_DatabaseDefinition_SetDbName_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L24
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.SetDbName(System.String)
    commentId: M:DataLinq.Metadata.DatabaseDefinition.SetDbName(System.String)
- code: public void SetDbName(string dbName)
- h4: Parameters
- parameters:
  - name: dbName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: SetName(string)
  id: DataLinq_Metadata_DatabaseDefinition_SetName_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L22
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.SetName(System.String)
    commentId: M:DataLinq.Metadata.DatabaseDefinition.SetName(System.String)
- code: public void SetName(string name)
- h4: Parameters
- parameters:
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: SetTableModels(IEnumerable<TableModel>)
  id: DataLinq_Metadata_DatabaseDefinition_SetTableModels_System_Collections_Generic_IEnumerable_DataLinq_Metadata_TableModel__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Metadata/DatabaseDefinition.cs#L34
  metadata:
    uid: DataLinq.Metadata.DatabaseDefinition.SetTableModels(System.Collections.Generic.IEnumerable{DataLinq.Metadata.TableModel})
    commentId: M:DataLinq.Metadata.DatabaseDefinition.SetTableModels(System.Collections.Generic.IEnumerable{DataLinq.Metadata.TableModel})
- code: public void SetTableModels(IEnumerable<TableModel> tableModels)
- h4: Parameters
- parameters:
  - name: tableModels
    type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - text: TableModel
      url: DataLinq.Metadata.TableModel.html
    - '>'
languageId: csharp
