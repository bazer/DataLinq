### YamlMime:ApiPage
title: Class MetadataFromFileFactory
body:
- api1: Class MetadataFromFileFactory
  id: DataLinq_Core_Factories_Models_MetadataFromFileFactory
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Factories/Models/MetadataFromFileFactory.cs#L32
  metadata:
    uid: DataLinq.Core.Factories.Models.MetadataFromFileFactory
    commentId: T:DataLinq.Core.Factories.Models.MetadataFromFileFactory
- facts:
  - name: Namespace
    value:
      text: DataLinq.Core.Factories.Models
      url: DataLinq.Core.Factories.Models.html
  - name: Assembly
    value: DataLinq.Core.dll
- code: public class MetadataFromFileFactory
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: MetadataFromFileFactory
    url: DataLinq.Core.Factories.Models.MetadataFromFileFactory.html
- h4: Inherited Members
- list:
  - text: object.Equals(object)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object, object)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object, object)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: MetadataFromFileFactory(MetadataFromFileFactoryOptions, Action<string>?)
  id: DataLinq_Core_Factories_Models_MetadataFromFileFactory__ctor_DataLinq_Core_Factories_Models_MetadataFromFileFactoryOptions_System_Action_System_String__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Factories/Models/MetadataFromFileFactory.cs#L37
  metadata:
    uid: DataLinq.Core.Factories.Models.MetadataFromFileFactory.#ctor(DataLinq.Core.Factories.Models.MetadataFromFileFactoryOptions,System.Action{System.String})
    commentId: M:DataLinq.Core.Factories.Models.MetadataFromFileFactory.#ctor(DataLinq.Core.Factories.Models.MetadataFromFileFactoryOptions,System.Action{System.String})
- code: public MetadataFromFileFactory(MetadataFromFileFactoryOptions options, Action<string>? log = null)
- h4: Parameters
- parameters:
  - name: options
    type:
    - text: MetadataFromFileFactoryOptions
      url: DataLinq.Core.Factories.Models.MetadataFromFileFactoryOptions.html
  - name: log
    type:
    - text: Action
      url: https://learn.microsoft.com/dotnet/api/system.action-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
    optional: true
- h2: Properties
- api3: Log
  id: DataLinq_Core_Factories_Models_MetadataFromFileFactory_Log
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Factories/Models/MetadataFromFileFactory.cs#L35
  metadata:
    uid: DataLinq.Core.Factories.Models.MetadataFromFileFactory.Log
    commentId: P:DataLinq.Core.Factories.Models.MetadataFromFileFactory.Log
- code: public Action<string>? Log { get; }
- h4: Property Value
- parameters:
  - type:
    - text: Action
      url: https://learn.microsoft.com/dotnet/api/system.action-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
- h2: Methods
- api3: ReadFiles(string, IEnumerable<string>)
  id: DataLinq_Core_Factories_Models_MetadataFromFileFactory_ReadFiles_System_String_System_Collections_Generic_IEnumerable_System_String__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Factories/Models/MetadataFromFileFactory.cs#L43
  metadata:
    uid: DataLinq.Core.Factories.Models.MetadataFromFileFactory.ReadFiles(System.String,System.Collections.Generic.IEnumerable{System.String})
    commentId: M:DataLinq.Core.Factories.Models.MetadataFromFileFactory.ReadFiles(System.String,System.Collections.Generic.IEnumerable{System.String})
- code: public Option<DatabaseDefinition, IDLOptionFailure> ReadFiles(string csType, IEnumerable<string> srcPaths)
- h4: Parameters
- parameters:
  - name: csType
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
  - name: srcPaths
    type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
- h4: Returns
- parameters:
  - type:
    - Option
    - <
    - text: DatabaseDefinition
      url: DataLinq.Metadata.DatabaseDefinition.html
    - ','
    - " "
    - text: IDLOptionFailure
      url: DataLinq.ErrorHandling.IDLOptionFailure.html
    - '>'
- api3: ReadSyntaxTrees(ImmutableArray<TypeDeclarationSyntax>)
  id: DataLinq_Core_Factories_Models_MetadataFromFileFactory_ReadSyntaxTrees_System_Collections_Immutable_ImmutableArray_Microsoft_CodeAnalysis_CSharp_Syntax_TypeDeclarationSyntax__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Factories/Models/MetadataFromFileFactory.cs#L111
  metadata:
    uid: DataLinq.Core.Factories.Models.MetadataFromFileFactory.ReadSyntaxTrees(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax})
    commentId: M:DataLinq.Core.Factories.Models.MetadataFromFileFactory.ReadSyntaxTrees(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax})
- code: public Option<DatabaseDefinition, IDLOptionFailure> ReadSyntaxTrees(ImmutableArray<TypeDeclarationSyntax> modelSyntaxes)
- h4: Parameters
- parameters:
  - name: modelSyntaxes
    type:
    - text: ImmutableArray
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
    - <
    - text: TypeDeclarationSyntax
      url: https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.syntax.typedeclarationsyntax
    - '>'
- h4: Returns
- parameters:
  - type:
    - Option
    - <
    - text: DatabaseDefinition
      url: DataLinq.Metadata.DatabaseDefinition.html
    - ','
    - " "
    - text: IDLOptionFailure
      url: DataLinq.ErrorHandling.IDLOptionFailure.html
    - '>'
languageId: csharp
