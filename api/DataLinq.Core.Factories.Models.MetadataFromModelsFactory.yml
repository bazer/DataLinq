### YamlMime:ApiPage
title: Class MetadataFromModelsFactory
body:
- api1: Class MetadataFromModelsFactory
  id: DataLinq_Core_Factories_Models_MetadataFromModelsFactory
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Factories/Generator/MetadataFromModelsFactory.cs#L29
  metadata:
    uid: DataLinq.Core.Factories.Models.MetadataFromModelsFactory
    commentId: T:DataLinq.Core.Factories.Models.MetadataFromModelsFactory
- facts:
  - name: Namespace
    value:
      text: DataLinq.Core.Factories.Models
      url: DataLinq.Core.Factories.Models.html
  - name: Assembly
    value: DataLinq.Core.dll
- code: public class MetadataFromModelsFactory
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: MetadataFromModelsFactory
    url: DataLinq.Core.Factories.Models.MetadataFromModelsFactory.html
- h4: Inherited Members
- list:
  - text: object.Equals(object)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object, object)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object, object)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: MetadataFromModelsFactory(MetadataFromInterfacesFactoryOptions, Action<string>?)
  id: DataLinq_Core_Factories_Models_MetadataFromModelsFactory__ctor_DataLinq_Core_Factories_Models_MetadataFromInterfacesFactoryOptions_System_Action_System_String__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Factories/Generator/MetadataFromModelsFactory.cs#L34
  metadata:
    uid: DataLinq.Core.Factories.Models.MetadataFromModelsFactory.#ctor(DataLinq.Core.Factories.Models.MetadataFromInterfacesFactoryOptions,System.Action{System.String})
    commentId: M:DataLinq.Core.Factories.Models.MetadataFromModelsFactory.#ctor(DataLinq.Core.Factories.Models.MetadataFromInterfacesFactoryOptions,System.Action{System.String})
- code: public MetadataFromModelsFactory(MetadataFromInterfacesFactoryOptions options, Action<string>? log = null)
- h4: Parameters
- parameters:
  - name: options
    type:
    - text: MetadataFromInterfacesFactoryOptions
      url: DataLinq.Core.Factories.Models.MetadataFromInterfacesFactoryOptions.html
  - name: log
    type:
    - text: Action
      url: https://learn.microsoft.com/dotnet/api/system.action-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
    optional: true
- h2: Properties
- api3: Log
  id: DataLinq_Core_Factories_Models_MetadataFromModelsFactory_Log
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Factories/Generator/MetadataFromModelsFactory.cs#L32
  metadata:
    uid: DataLinq.Core.Factories.Models.MetadataFromModelsFactory.Log
    commentId: P:DataLinq.Core.Factories.Models.MetadataFromModelsFactory.Log
- code: public Action<string>? Log { get; }
- h4: Property Value
- parameters:
  - type:
    - text: Action
      url: https://learn.microsoft.com/dotnet/api/system.action-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
- h2: Methods
- api3: ReadSyntaxTrees(ImmutableArray<TypeDeclarationSyntax>)
  id: DataLinq_Core_Factories_Models_MetadataFromModelsFactory_ReadSyntaxTrees_System_Collections_Immutable_ImmutableArray_Microsoft_CodeAnalysis_CSharp_Syntax_TypeDeclarationSyntax__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.Core/Factories/Generator/MetadataFromModelsFactory.cs#L40
  metadata:
    uid: DataLinq.Core.Factories.Models.MetadataFromModelsFactory.ReadSyntaxTrees(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax})
    commentId: M:DataLinq.Core.Factories.Models.MetadataFromModelsFactory.ReadSyntaxTrees(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax})
- code: public List<Option<DatabaseDefinition, IDLOptionFailure>> ReadSyntaxTrees(ImmutableArray<TypeDeclarationSyntax> modelSyntaxes)
- h4: Parameters
- parameters:
  - name: modelSyntaxes
    type:
    - text: ImmutableArray
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
    - <
    - text: TypeDeclarationSyntax
      url: https://learn.microsoft.com/dotnet/api/microsoft.codeanalysis.csharp.syntax.typedeclarationsyntax
    - '>'
- h4: Returns
- parameters:
  - type:
    - text: List
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
    - <
    - Option
    - <
    - text: DatabaseDefinition
      url: DataLinq.Metadata.DatabaseDefinition.html
    - ','
    - " "
    - text: IDLOptionFailure
      url: DataLinq.ErrorHandling.IDLOptionFailure.html
    - '>'
    - '>'
languageId: csharp
