### YamlMime:ApiPage
title: Class MySqlDatabaseCreator
body:
- api1: Class MySqlDatabaseCreator
  id: DataLinq_MySql_MySqlDatabaseCreator
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/MySqlDatabase.cs#L11
  metadata:
    uid: DataLinq.MySql.MySqlDatabaseCreator
    commentId: T:DataLinq.MySql.MySqlDatabaseCreator
- facts:
  - name: Namespace
    value:
      text: DataLinq.MySql
      url: DataLinq.MySql.html
  - name: Assembly
    value: DataLinq.MySql.dll
- markdown: Factory for creating instances of MySQL database providers.
- code: 'public class MySqlDatabaseCreator : IDatabaseProviderCreator'
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: MySqlDatabaseCreator
    url: DataLinq.MySql.MySqlDatabaseCreator.html
- h4: Implements
- list:
  - text: IDatabaseProviderCreator
    url: DataLinq.Metadata.IDatabaseProviderCreator.html
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Methods
- api3: IsDatabaseType(string)
  id: DataLinq_MySql_MySqlDatabaseCreator_IsDatabaseType_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/MySqlDatabase.cs#L20
  metadata:
    uid: DataLinq.MySql.MySqlDatabaseCreator.IsDatabaseType(System.String)
    commentId: M:DataLinq.MySql.MySqlDatabaseCreator.IsDatabaseType(System.String)
- markdown: Determines if the provided type name corresponds to a MySQL or MariaDB database type.
- code: public bool IsDatabaseType(string typeName)
- h4: Parameters
- parameters:
  - name: typeName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The name of the database type to check.
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: true if typeName is either 'mysql' or 'mariadb'; otherwise, false.
- api3: UseLoggerFactory(ILoggerFactory?)
  id: DataLinq_MySql_MySqlDatabaseCreator_UseLoggerFactory_Microsoft_Extensions_Logging_ILoggerFactory_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/MySqlDatabase.cs#L38
  metadata:
    uid: DataLinq.MySql.MySqlDatabaseCreator.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
    commentId: M:DataLinq.MySql.MySqlDatabaseCreator.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)
- code: public MySqlDatabaseCreator UseLoggerFactory(ILoggerFactory? loggerFactory)
- h4: Parameters
- parameters:
  - name: loggerFactory
    type:
    - text: ILoggerFactory
      url: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.iloggerfactory
    - '?'
- h4: Returns
- parameters:
  - type:
    - text: MySqlDatabaseCreator
      url: DataLinq.MySql.MySqlDatabaseCreator.html
languageId: csharp
metadata:
  description: Factory for creating instances of MySQL database providers.
