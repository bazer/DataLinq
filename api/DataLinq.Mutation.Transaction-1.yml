### YamlMime:ApiPage
title: Class Transaction<T>
body:
- api1: Class Transaction<T>
  id: DataLinq_Mutation_Transaction_1
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Mutation/Transaction.cs#L450
  metadata:
    uid: DataLinq.Mutation.Transaction`1
    commentId: T:DataLinq.Mutation.Transaction`1
- facts:
  - name: Namespace
    value:
      text: DataLinq.Mutation
      url: DataLinq.Mutation.html
  - name: Assembly
    value: DataLinq.dll
- markdown: Represents a database transaction.
- code: 'public class Transaction<T> : Transaction, IDataSourceAccess, IDisposable, IEquatable<Transaction> where T : class, IDatabaseModel'
- h4: Type Parameters
- parameters:
  - name: T
    description: The type of the database model.
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: DataSourceAccess
    url: DataLinq.Mutation.DataSourceAccess.html
  - text: Transaction
    url: DataLinq.Mutation.Transaction.html
  - text: Transaction<T>
    url: DataLinq.Mutation.Transaction-1.html
- h4: Implements
- list:
  - IDataSourceAccess
  - text: IDisposable
    url: https://learn.microsoft.com/dotnet/api/system.idisposable
  - text: IEquatable<Transaction>
    url: https://learn.microsoft.com/dotnet/api/system.iequatable-1
- h4: Inherited Members
- list:
  - text: Transaction.TransactionID
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_TransactionID
  - text: Transaction.Changes
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_Changes
  - text: Transaction.Type
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_Type
  - text: Transaction.Status
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_Status
  - text: Transaction.DatabaseAccess
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_DatabaseAccess
  - text: Transaction.OnStatusChanged
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_OnStatusChanged
  - text: Transaction.Insert<T>(Mutable<T>)
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_Insert__1_DataLinq_Instances_Mutable___0__
  - text: Transaction.Insert<T>(IEnumerable<Mutable<T>>)
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_Insert__1_System_Collections_Generic_IEnumerable_DataLinq_Instances_Mutable___0___
  - text: Transaction.Update<T>(Mutable<T>)
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_Update__1_DataLinq_Instances_Mutable___0__
  - text: Transaction.Update<T>(T, Action<Mutable<T>>)
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_Update__1___0_System_Action_DataLinq_Instances_Mutable___0___
  - text: Transaction.Save<T>(Mutable<T>)
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_Save__1_DataLinq_Instances_Mutable___0__
  - text: Transaction.Save<T>(T, Action<Mutable<T>>)
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_Save__1___0_System_Action_DataLinq_Instances_Mutable___0___
  - text: Transaction.Save<T>(Mutable<T>, Action<Mutable<T>>)
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_Save__1_DataLinq_Instances_Mutable___0__System_Action_DataLinq_Instances_Mutable___0___
  - text: Transaction.Delete(IModelInstance)
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_Delete_DataLinq_Instances_IModelInstance_
  - text: Transaction.GetFromQuery<T>(string)
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_GetFromQuery__1_System_String_
  - text: Transaction.GetFromCommand<T>(IDbCommand)
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_GetFromCommand__1_System_Data_IDbCommand_
  - text: Transaction.Commit()
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_Commit
  - text: Transaction.Rollback()
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_Rollback
  - text: Transaction.Dispose()
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_Dispose
  - text: Transaction.Equals(Transaction?)
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_Equals_DataLinq_Mutation_Transaction_
  - text: Transaction.Equals(object?)
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_Equals_System_Object_
  - text: Transaction.GetHashCode()
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_GetHashCode
  - text: Transaction.ToString()
    url: DataLinq.Mutation.Transaction.html#DataLinq_Mutation_Transaction_ToString
  - text: DataSourceAccess.Provider
    url: DataLinq.Mutation.DataSourceAccess.html#DataLinq_Mutation_DataSourceAccess_Provider
  - text: DataSourceAccess.DatabaseAccess
    url: DataLinq.Mutation.DataSourceAccess.html#DataLinq_Mutation_DataSourceAccess_DatabaseAccess
  - text: DataSourceAccess.GetFromQuery<T>(string)
    url: DataLinq.Mutation.DataSourceAccess.html#DataLinq_Mutation_DataSourceAccess_GetFromQuery__1_System_String_
  - text: DataSourceAccess.GetFromCommand<T>(IDbCommand)
    url: DataLinq.Mutation.DataSourceAccess.html#DataLinq_Mutation_DataSourceAccess_GetFromCommand__1_System_Data_IDbCommand_
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: Transaction(DatabaseProvider<T>, TransactionType)
  id: DataLinq_Mutation_Transaction_1__ctor_DataLinq_DatabaseProvider__0__DataLinq_Mutation_TransactionType_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Mutation/Transaction.cs#L462
  metadata:
    uid: DataLinq.Mutation.Transaction`1.#ctor(DataLinq.DatabaseProvider{`0},DataLinq.Mutation.TransactionType)
    commentId: M:DataLinq.Mutation.Transaction`1.#ctor(DataLinq.DatabaseProvider{`0},DataLinq.Mutation.TransactionType)
- markdown: Initializes a new instance of the <xref href="DataLinq.Mutation.Transaction%601" data-throw-if-not-resolved="false"></xref> class.
- code: public Transaction(DatabaseProvider<T> databaseProvider, TransactionType type)
- h4: Parameters
- parameters:
  - name: databaseProvider
    type:
    - text: DatabaseProvider
      url: DataLinq.DatabaseProvider-1.html
    - <
    - T
    - '>'
    description: The database provider.
  - name: type
    type:
    - text: TransactionType
      url: DataLinq.Mutation.TransactionType.html
    description: The type of the transaction.
- api3: Transaction(DatabaseProvider<T>, IDbTransaction, TransactionType)
  id: DataLinq_Mutation_Transaction_1__ctor_DataLinq_DatabaseProvider__0__System_Data_IDbTransaction_DataLinq_Mutation_TransactionType_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Mutation/Transaction.cs#L473
  metadata:
    uid: DataLinq.Mutation.Transaction`1.#ctor(DataLinq.DatabaseProvider{`0},System.Data.IDbTransaction,DataLinq.Mutation.TransactionType)
    commentId: M:DataLinq.Mutation.Transaction`1.#ctor(DataLinq.DatabaseProvider{`0},System.Data.IDbTransaction,DataLinq.Mutation.TransactionType)
- markdown: Initializes a new instance of the <xref href="DataLinq.Mutation.Transaction%601" data-throw-if-not-resolved="false"></xref> class.
- code: public Transaction(DatabaseProvider<T> databaseProvider, IDbTransaction dbTransaction, TransactionType type)
- h4: Parameters
- parameters:
  - name: databaseProvider
    type:
    - text: DatabaseProvider
      url: DataLinq.DatabaseProvider-1.html
    - <
    - T
    - '>'
    description: The database provider.
  - name: dbTransaction
    type:
    - text: IDbTransaction
      url: https://learn.microsoft.com/dotnet/api/system.data.idbtransaction
    description: The database transaction.
  - name: type
    type:
    - text: TransactionType
      url: DataLinq.Mutation.TransactionType.html
    description: The type of the transaction.
- h2: Properties
- api3: Database
  id: DataLinq_Mutation_Transaction_1_Database
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Mutation/Transaction.cs#L455
  metadata:
    uid: DataLinq.Mutation.Transaction`1.Database
    commentId: P:DataLinq.Mutation.Transaction`1.Database
- markdown: Gets the database for the transaction.
- code: protected T Database { get; }
- h4: Property Value
- parameters:
  - type:
    - T
- h2: Methods
- api3: From(string)
  id: DataLinq_Mutation_Transaction_1_From_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Mutation/Transaction.cs#L489
  metadata:
    uid: DataLinq.Mutation.Transaction`1.From(System.String)
    commentId: M:DataLinq.Mutation.Transaction`1.From(System.String)
- markdown: Creates a new SQL query from the specified table name.
- code: public SqlQuery From(string tableName)
- h4: Parameters
- parameters:
  - name: tableName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The name of the table.
- h4: Returns
- parameters:
  - type:
    - text: SqlQuery
      url: DataLinq.Query.SqlQuery.html
    description: The SQL query.
- api3: From(TableDefinition)
  id: DataLinq_Mutation_Transaction_1_From_DataLinq_Metadata_TableDefinition_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Mutation/Transaction.cs#L501
  metadata:
    uid: DataLinq.Mutation.Transaction`1.From(DataLinq.Metadata.TableDefinition)
    commentId: M:DataLinq.Mutation.Transaction`1.From(DataLinq.Metadata.TableDefinition)
- markdown: Creates a new SQL query from the specified table metadata.
- code: public SqlQuery From(TableDefinition table)
- h4: Parameters
- parameters:
  - name: table
    type:
    - TableDefinition
    description: The table metadata.
- h4: Returns
- parameters:
  - type:
    - text: SqlQuery
      url: DataLinq.Query.SqlQuery.html
    description: The SQL query.
- api3: From<V>()
  id: DataLinq_Mutation_Transaction_1_From__1
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Mutation/Transaction.cs#L511
  metadata:
    uid: DataLinq.Mutation.Transaction`1.From``1
    commentId: M:DataLinq.Mutation.Transaction`1.From``1
- markdown: Creates a new SQL query from the specified model type.
- code: 'public SqlQuery<V> From<V>() where V : IModel'
- h4: Returns
- parameters:
  - type:
    - text: SqlQuery
      url: DataLinq.Query.SqlQuery-1.html
    - <
    - V
    - '>'
    description: The SQL query.
- h4: Type Parameters
- parameters:
  - name: V
    description: The type of the model.
- api3: Query()
  id: DataLinq_Mutation_Transaction_1_Query
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Mutation/Transaction.cs#L482
  metadata:
    uid: DataLinq.Mutation.Transaction`1.Query
    commentId: M:DataLinq.Mutation.Transaction`1.Query
- markdown: Gets the schema.
- code: public T Query()
- h4: Returns
- parameters:
  - type:
    - T
    description: The schema.
languageId: csharp
metadata:
  description: Represents a database transaction.
