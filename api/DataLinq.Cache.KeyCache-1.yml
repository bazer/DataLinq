### YamlMime:ApiPage
title: Class KeyCache<T>
body:
- api1: Class KeyCache<T>
  id: DataLinq_Cache_KeyCache_1
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/KeyCache.cs#L7
  metadata:
    uid: DataLinq.Cache.KeyCache`1
    commentId: T:DataLinq.Cache.KeyCache`1
- facts:
  - name: Namespace
    value:
      text: DataLinq.Cache
      url: DataLinq.Cache.html
  - name: Assembly
    value: DataLinq.dll
- code: 'public class KeyCache<T> where T : IKey'
- h4: Type Parameters
- parameters:
  - name: T
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: KeyCache<T>
    url: DataLinq.Cache.KeyCache-1.html
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Properties
- api3: Count
  id: DataLinq_Cache_KeyCache_1_Count
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/KeyCache.cs#L11
  metadata:
    uid: DataLinq.Cache.KeyCache`1.Count
    commentId: P:DataLinq.Cache.KeyCache`1.Count
- code: public int Count { get; }
- h4: Property Value
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: Values
  id: DataLinq_Cache_KeyCache_1_Values
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/KeyCache.cs#L12
  metadata:
    uid: DataLinq.Cache.KeyCache`1.Values
    commentId: P:DataLinq.Cache.KeyCache`1.Values
- code: public IEnumerable<T> Values { get; }
- h4: Property Value
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - T
    - '>'
- h2: Methods
- api3: Clear()
  id: DataLinq_Cache_KeyCache_1_Clear
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/KeyCache.cs#L21
  metadata:
    uid: DataLinq.Cache.KeyCache`1.Clear
    commentId: M:DataLinq.Cache.KeyCache`1.Clear
- code: public void Clear()
- api3: ContainsKey(int)
  id: DataLinq_Cache_KeyCache_1_ContainsKey_System_Int32_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/KeyCache.cs#L16
  metadata:
    uid: DataLinq.Cache.KeyCache`1.ContainsKey(System.Int32)
    commentId: M:DataLinq.Cache.KeyCache`1.ContainsKey(System.Int32)
- code: public bool ContainsKey(int hashCode)
- h4: Parameters
- parameters:
  - name: hashCode
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: ContainsKey(T)
  id: DataLinq_Cache_KeyCache_1_ContainsKey__0_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/KeyCache.cs#L17
  metadata:
    uid: DataLinq.Cache.KeyCache`1.ContainsKey(`0)
    commentId: M:DataLinq.Cache.KeyCache`1.ContainsKey(`0)
- code: public bool ContainsKey(T keys)
- h4: Parameters
- parameters:
  - name: keys
    type:
    - T
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: TryAdd(T)
  id: DataLinq_Cache_KeyCache_1_TryAdd__0_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/KeyCache.cs#L14
  metadata:
    uid: DataLinq.Cache.KeyCache`1.TryAdd(`0)
    commentId: M:DataLinq.Cache.KeyCache`1.TryAdd(`0)
- code: public bool TryAdd(T keys)
- h4: Parameters
- parameters:
  - name: keys
    type:
    - T
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: TryGetValue(int, out T?)
  id: DataLinq_Cache_KeyCache_1_TryGetValue_System_Int32__0__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/KeyCache.cs#L19
  metadata:
    uid: DataLinq.Cache.KeyCache`1.TryGetValue(System.Int32,`0@)
    commentId: M:DataLinq.Cache.KeyCache`1.TryGetValue(System.Int32,`0@)
- code: public bool TryGetValue(int hashCode, out T? keys)
- h4: Parameters
- parameters:
  - name: hashCode
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
  - name: keys
    type:
    - T
    - '?'
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
languageId: csharp
