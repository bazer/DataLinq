### YamlMime:ApiPage
title: Class Delete<T>
body:
- api1: Class Delete<T>
  id: DataLinq_Query_Delete_1
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Delete.cs#L6
  metadata:
    uid: DataLinq.Query.Delete`1
    commentId: T:DataLinq.Query.Delete`1
- facts:
  - name: Namespace
    value:
      text: DataLinq.Query
      url: DataLinq.Query.html
  - name: Assembly
    value: DataLinq.dll
- code: 'public class Delete<T> : IQuery'
- h4: Type Parameters
- parameters:
  - name: T
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: Delete<T>
    url: DataLinq.Query.Delete-1.html
- h4: Implements
- list:
  - text: IQuery
    url: DataLinq.Query.IQuery.html
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: Delete(SqlQuery<T>)
  id: DataLinq_Query_Delete_1__ctor_DataLinq_Query_SqlQuery__0__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Delete.cs#L10
  metadata:
    uid: DataLinq.Query.Delete`1.#ctor(DataLinq.Query.SqlQuery{`0})
    commentId: M:DataLinq.Query.Delete`1.#ctor(DataLinq.Query.SqlQuery{`0})
- code: public Delete(SqlQuery<T> query)
- h4: Parameters
- parameters:
  - name: query
    type:
    - text: SqlQuery
      url: DataLinq.Query.SqlQuery-1.html
    - <
    - T
    - '>'
- h2: Methods
- api3: Execute()
  id: DataLinq_Query_Delete_1_Execute
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Delete.cs#L31
  metadata:
    uid: DataLinq.Query.Delete`1.Execute
    commentId: M:DataLinq.Query.Delete`1.Execute
- code: public QueryResult Execute()
- h4: Returns
- parameters:
  - type:
    - text: QueryResult
      url: DataLinq.Query.QueryResult.html
- api3: ToDbCommand()
  id: DataLinq_Query_Delete_1_ToDbCommand
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Delete.cs#L15
  metadata:
    uid: DataLinq.Query.Delete`1.ToDbCommand
    commentId: M:DataLinq.Query.Delete`1.ToDbCommand
- code: public IDbCommand ToDbCommand()
- h4: Returns
- parameters:
  - type:
    - text: IDbCommand
      url: https://learn.microsoft.com/dotnet/api/system.data.idbcommand
- api3: ToSql(string?)
  id: DataLinq_Query_Delete_1_ToSql_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Delete.cs#L20
  metadata:
    uid: DataLinq.Query.Delete`1.ToSql(System.String)
    commentId: M:DataLinq.Query.Delete`1.ToSql(System.String)
- code: public Sql ToSql(string? paramPrefix = null)
- h4: Parameters
- parameters:
  - name: paramPrefix
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: Sql
      url: DataLinq.Query.Sql.html
languageId: csharp
