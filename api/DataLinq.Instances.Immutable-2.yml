### YamlMime:ApiPage
title: Class Immutable<T, M>
body:
- api1: Class Immutable<T, M>
  id: DataLinq_Instances_Immutable_2
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L11
  metadata:
    uid: DataLinq.Instances.Immutable`2
    commentId: T:DataLinq.Instances.Immutable`2
- facts:
  - name: Namespace
    value:
      text: DataLinq.Instances
      url: DataLinq.Instances.html
  - name: Assembly
    value: DataLinq.dll
- code: 'public abstract class Immutable<T, M> : IImmutable<T>, IImmutableInstance<M>, IImmutableInstance, IModelInstance<M>, IModelInstance, IModel, IEquatable<Immutable<T, M>> where T : IModel where M : class, IDatabaseModel'
- h4: Type Parameters
- parameters:
  - name: T
  - name: M
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: Immutable<T, M>
    url: DataLinq.Instances.Immutable-2.html
- h4: Implements
- list:
  - text: IImmutable<T>
    url: DataLinq.Instances.IImmutable-1.html
  - text: IImmutableInstance<M>
    url: DataLinq.Instances.IImmutableInstance-1.html
  - text: IImmutableInstance
    url: DataLinq.Instances.IImmutableInstance.html
  - text: IModelInstance<M>
    url: DataLinq.Instances.IModelInstance-1.html
  - text: IModelInstance
    url: DataLinq.Instances.IModelInstance.html
  - IModel
  - text: IEquatable<Immutable<T, M>>
    url: https://learn.microsoft.com/dotnet/api/system.iequatable-1
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h4: Extension Methods
- list:
  - text: IModelExtensions.Delete<Immutable<T, M>>(Immutable<T, M>)
    url: DataLinq.IModelExtensions.html#DataLinq_IModelExtensions_Delete__1___0_
  - text: IModelExtensions.Delete<Immutable<T, M>>(Immutable<T, M>, Transaction)
    url: DataLinq.IModelExtensions.html#DataLinq_IModelExtensions_Delete__1___0_DataLinq_Mutation_Transaction_
- h2: Constructors
- api3: Immutable(RowData, DataSourceAccess)
  id: DataLinq_Instances_Immutable_2__ctor_DataLinq_Instances_RowData_DataLinq_Mutation_DataSourceAccess_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L11
  metadata:
    uid: DataLinq.Instances.Immutable`2.#ctor(DataLinq.Instances.RowData,DataLinq.Mutation.DataSourceAccess)
    commentId: M:DataLinq.Instances.Immutable`2.#ctor(DataLinq.Instances.RowData,DataLinq.Mutation.DataSourceAccess)
- code: protected Immutable(RowData rowData, DataSourceAccess dataSource)
- h4: Parameters
- parameters:
  - name: rowData
    type:
    - text: RowData
      url: DataLinq.Instances.RowData.html
  - name: dataSource
    type:
    - text: DataSourceAccess
      url: DataLinq.Mutation.DataSourceAccess.html
- h2: Fields
- api3: lazyValues
  id: DataLinq_Instances_Immutable_2_lazyValues
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L18
  metadata:
    uid: DataLinq.Instances.Immutable`2.lazyValues
    commentId: F:DataLinq.Instances.Immutable`2.lazyValues
- code: protected ConcurrentDictionary<string, object?>? lazyValues
- h4: Field Value
- parameters:
  - type:
    - text: ConcurrentDictionary
      url: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - ','
    - " "
    - text: object
      url: https://learn.microsoft.com/dotnet/api/system.object
    - '?'
    - '>'
    - '?'
- api3: relationKeys
  id: DataLinq_Instances_Immutable_2_relationKeys
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L15
  metadata:
    uid: DataLinq.Instances.Immutable`2.relationKeys
    commentId: F:DataLinq.Instances.Immutable`2.relationKeys
- code: protected Dictionary<RelationProperty, IKey> relationKeys
- h4: Field Value
- parameters:
  - type:
    - text: Dictionary
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
    - <
    - RelationProperty
    - ','
    - " "
    - text: IKey
      url: DataLinq.Instances.IKey.html
    - '>'
- h2: Properties
- api3: this[ColumnDefinition]
  id: DataLinq_Instances_Immutable_2_Item_DataLinq_Metadata_ColumnDefinition_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L20
  metadata:
    uid: DataLinq.Instances.Immutable`2.Item(DataLinq.Metadata.ColumnDefinition)
    commentId: P:DataLinq.Instances.Immutable`2.Item(DataLinq.Metadata.ColumnDefinition)
- code: public object? this[ColumnDefinition column] { get; }
- h4: Property Value
- parameters:
  - type:
    - text: object
      url: https://learn.microsoft.com/dotnet/api/system.object
    - '?'
- api3: this[string]
  id: DataLinq_Instances_Immutable_2_Item_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L21
  metadata:
    uid: DataLinq.Instances.Immutable`2.Item(System.String)
    commentId: P:DataLinq.Instances.Immutable`2.Item(System.String)
- code: public object? this[string propertyName] { get; }
- h4: Property Value
- parameters:
  - type:
    - text: object
      url: https://learn.microsoft.com/dotnet/api/system.object
    - '?'
- h2: Methods
- api3: ClearLazy()
  id: DataLinq_Instances_Immutable_2_ClearLazy
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L34
  metadata:
    uid: DataLinq.Instances.Immutable`2.ClearLazy
    commentId: M:DataLinq.Instances.Immutable`2.ClearLazy
- code: public void ClearLazy()
- api3: Equals(Immutable<T, M>?)
  id: DataLinq_Instances_Immutable_2_Equals_DataLinq_Instances_Immutable__0__1__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L86
  metadata:
    uid: DataLinq.Instances.Immutable`2.Equals(DataLinq.Instances.Immutable{`0,`1})
    commentId: M:DataLinq.Instances.Immutable`2.Equals(DataLinq.Instances.Immutable{`0,`1})
- markdown: Indicates whether the current object is equal to another object of the same type.
- code: public bool Equals(Immutable<T, M>? other)
- h4: Parameters
- parameters:
  - name: other
    type:
    - text: Immutable
      url: DataLinq.Instances.Immutable-2.html
    - <
    - T
    - ','
    - " "
    - M
    - '>'
    - '?'
    description: An object to compare with this object.
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
- api3: Equals(object?)
  id: DataLinq_Instances_Immutable_2_Equals_System_Object_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L87
  metadata:
    uid: DataLinq.Instances.Immutable`2.Equals(System.Object)
    commentId: M:DataLinq.Instances.Immutable`2.Equals(System.Object)
- markdown: Determines whether the specified object is equal to the current object.
- code: public override bool Equals(object? obj)
- h4: Parameters
- parameters:
  - name: obj
    type:
    - text: object
      url: https://learn.microsoft.com/dotnet/api/system.object
    - '?'
    description: The object to compare with the current object.
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
- api3: GetDataSource()
  id: DataLinq_Instances_Immutable_2_GetDataSource
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L78
  metadata:
    uid: DataLinq.Instances.Immutable`2.GetDataSource
    commentId: M:DataLinq.Instances.Immutable`2.GetDataSource
- code: public DataSourceAccess GetDataSource()
- h4: Returns
- parameters:
  - type:
    - text: DataSourceAccess
      url: DataLinq.Mutation.DataSourceAccess.html
- api3: GetForeignKey<V>(string)
  id: DataLinq_Instances_Immutable_2_GetForeignKey__1_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L62
  metadata:
    uid: DataLinq.Instances.Immutable`2.GetForeignKey``1(System.String)
    commentId: M:DataLinq.Instances.Immutable`2.GetForeignKey``1(System.String)
- code: 'protected V? GetForeignKey<V>(string propertyName) where V : IImmutableInstance'
- h4: Parameters
- parameters:
  - name: propertyName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- h4: Returns
- parameters:
  - type:
    - V
    - '?'
- h4: Type Parameters
- parameters:
  - name: V
- api3: GetHashCode()
  id: DataLinq_Instances_Immutable_2_GetHashCode
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L88
  metadata:
    uid: DataLinq.Instances.Immutable`2.GetHashCode
    commentId: M:DataLinq.Instances.Immutable`2.GetHashCode
- markdown: Serves as the default hash function.
- code: public override int GetHashCode()
- h4: Returns
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: A hash code for the current object.
- api3: GetImmutableForeignKey<V>(string)
  id: DataLinq_Instances_Immutable_2_GetImmutableForeignKey__1_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L48
  metadata:
    uid: DataLinq.Instances.Immutable`2.GetImmutableForeignKey``1(System.String)
    commentId: M:DataLinq.Instances.Immutable`2.GetImmutableForeignKey``1(System.String)
- code: 'protected ImmutableForeignKey<V> GetImmutableForeignKey<V>(string propertyName) where V : IImmutableInstance'
- h4: Parameters
- parameters:
  - name: propertyName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- h4: Returns
- parameters:
  - type:
    - text: ImmutableForeignKey
      url: ImmutableForeignKey-1.html
    - <
    - V
    - '>'
- h4: Type Parameters
- parameters:
  - name: V
- api3: GetImmutableRelation<V>(string)
  id: DataLinq_Instances_Immutable_2_GetImmutableRelation__1_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L54
  metadata:
    uid: DataLinq.Instances.Immutable`2.GetImmutableRelation``1(System.String)
    commentId: M:DataLinq.Instances.Immutable`2.GetImmutableRelation``1(System.String)
- code: 'protected ImmutableRelation<V> GetImmutableRelation<V>(string propertyName) where V : IImmutableInstance'
- h4: Parameters
- parameters:
  - name: propertyName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- h4: Returns
- parameters:
  - type:
    - text: ImmutableRelation
      url: DataLinq.Instances.ImmutableRelation-1.html
    - <
    - V
    - '>'
- h4: Type Parameters
- parameters:
  - name: V
- api3: GetLazy<V>(string, Func<V>)
  id: DataLinq_Instances_Immutable_2_GetLazy__1_System_String_System_Func___0__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L35
  metadata:
    uid: DataLinq.Instances.Immutable`2.GetLazy``1(System.String,System.Func{``0})
    commentId: M:DataLinq.Instances.Immutable`2.GetLazy``1(System.String,System.Func{``0})
- code: public V? GetLazy<V>(string name, Func<V> fetchCode)
- h4: Parameters
- parameters:
  - name: name
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
  - name: fetchCode
    type:
    - text: Func
      url: https://learn.microsoft.com/dotnet/api/system.func-1
    - <
    - V
    - '>'
- h4: Returns
- parameters:
  - type:
    - V
    - '?'
- h4: Type Parameters
- parameters:
  - name: V
- api3: GetNullableValue(string)
  id: DataLinq_Instances_Immutable_2_GetNullableValue_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L61
  metadata:
    uid: DataLinq.Instances.Immutable`2.GetNullableValue(System.String)
    commentId: M:DataLinq.Instances.Immutable`2.GetNullableValue(System.String)
- code: protected object? GetNullableValue(string propertyName)
- h4: Parameters
- parameters:
  - name: propertyName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- h4: Returns
- parameters:
  - type:
    - text: object
      url: https://learn.microsoft.com/dotnet/api/system.object
    - '?'
- api3: GetRelation<V>(string)
  id: DataLinq_Instances_Immutable_2_GetRelation__1_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L63
  metadata:
    uid: DataLinq.Instances.Immutable`2.GetRelation``1(System.String)
    commentId: M:DataLinq.Instances.Immutable`2.GetRelation``1(System.String)
- code: 'protected IEnumerable<V> GetRelation<V>(string propertyName) where V : IImmutableInstance'
- h4: Parameters
- parameters:
  - name: propertyName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- h4: Returns
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - V
    - '>'
- h4: Type Parameters
- parameters:
  - name: V
- api3: GetRelation<V>(RelationProperty)
  id: DataLinq_Instances_Immutable_2_GetRelation__1_DataLinq_Metadata_RelationProperty_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L65
  metadata:
    uid: DataLinq.Instances.Immutable`2.GetRelation``1(DataLinq.Metadata.RelationProperty)
    commentId: M:DataLinq.Instances.Immutable`2.GetRelation``1(DataLinq.Metadata.RelationProperty)
- code: 'protected IEnumerable<V> GetRelation<V>(RelationProperty property) where V : IImmutableInstance'
- h4: Parameters
- parameters:
  - name: property
    type:
    - RelationProperty
- h4: Returns
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - V
    - '>'
- h4: Type Parameters
- parameters:
  - name: V
- api3: GetRowData()
  id: DataLinq_Instances_Immutable_2_GetRowData
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L27
  metadata:
    uid: DataLinq.Instances.Immutable`2.GetRowData
    commentId: M:DataLinq.Instances.Immutable`2.GetRowData
- code: public RowData GetRowData()
- h4: Returns
- parameters:
  - type:
    - text: RowData
      url: DataLinq.Instances.RowData.html
- api3: GetValue(string)
  id: DataLinq_Instances_Immutable_2_GetValue_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L60
  metadata:
    uid: DataLinq.Instances.Immutable`2.GetValue(System.String)
    commentId: M:DataLinq.Instances.Immutable`2.GetValue(System.String)
- code: protected object GetValue(string propertyName)
- h4: Parameters
- parameters:
  - name: propertyName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- h4: Returns
- parameters:
  - type:
    - text: object
      url: https://learn.microsoft.com/dotnet/api/system.object
- api3: GetValues()
  id: DataLinq_Instances_Immutable_2_GetValues
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L30
  metadata:
    uid: DataLinq.Instances.Immutable`2.GetValues
    commentId: M:DataLinq.Instances.Immutable`2.GetValues
- code: public IEnumerable<KeyValuePair<ColumnDefinition, object?>> GetValues()
- h4: Returns
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - text: KeyValuePair
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
    - <
    - ColumnDefinition
    - ','
    - " "
    - text: object
      url: https://learn.microsoft.com/dotnet/api/system.object
    - '?'
    - '>'
    - '>'
- api3: GetValues(IEnumerable<ColumnDefinition>)
  id: DataLinq_Instances_Immutable_2_GetValues_System_Collections_Generic_IEnumerable_DataLinq_Metadata_ColumnDefinition__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L31
  metadata:
    uid: DataLinq.Instances.Immutable`2.GetValues(System.Collections.Generic.IEnumerable{DataLinq.Metadata.ColumnDefinition})
    commentId: M:DataLinq.Instances.Immutable`2.GetValues(System.Collections.Generic.IEnumerable{DataLinq.Metadata.ColumnDefinition})
- code: public IEnumerable<KeyValuePair<ColumnDefinition, object?>> GetValues(IEnumerable<ColumnDefinition> columns)
- h4: Parameters
- parameters:
  - name: columns
    type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - ColumnDefinition
    - '>'
- h4: Returns
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - text: KeyValuePair
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
    - <
    - ColumnDefinition
    - ','
    - " "
    - text: object
      url: https://learn.microsoft.com/dotnet/api/system.object
    - '?'
    - '>'
    - '>'
- api3: HasPrimaryKeysSet()
  id: DataLinq_Instances_Immutable_2_HasPrimaryKeysSet
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L25
  metadata:
    uid: DataLinq.Instances.Immutable`2.HasPrimaryKeysSet
    commentId: M:DataLinq.Instances.Immutable`2.HasPrimaryKeysSet
- code: public bool HasPrimaryKeysSet()
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: Metadata()
  id: DataLinq_Instances_Immutable_2_Metadata
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L23
  metadata:
    uid: DataLinq.Instances.Immutable`2.Metadata
    commentId: M:DataLinq.Instances.Immutable`2.Metadata
- code: public ModelDefinition Metadata()
- h4: Returns
- parameters:
  - type:
    - ModelDefinition
- api3: PrimaryKeys()
  id: DataLinq_Instances_Immutable_2_PrimaryKeys
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/Immutable.cs#L24
  metadata:
    uid: DataLinq.Instances.Immutable`2.PrimaryKeys
    commentId: M:DataLinq.Instances.Immutable`2.PrimaryKeys
- code: public IKey PrimaryKeys()
- h4: Returns
- parameters:
  - type:
    - text: IKey
      url: DataLinq.Instances.IKey.html
languageId: csharp
