### YamlMime:ApiPage
title: Interface IImmutableRelation<T>
body:
- api1: Interface IImmutableRelation<T>
  id: DataLinq_Instances_IImmutableRelation_1
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L12
  metadata:
    uid: DataLinq.Instances.IImmutableRelation`1
    commentId: T:DataLinq.Instances.IImmutableRelation`1
- facts:
  - name: Namespace
    value:
      text: DataLinq.Instances
      url: DataLinq.Instances.html
  - name: Assembly
    value: DataLinq.dll
- code: 'public interface IImmutableRelation<T> : IEnumerable<T>, IEnumerable where T : IModelInstance'
- h4: Type Parameters
- parameters:
  - name: T
- h4: Implements
- list:
  - text: IEnumerable<T>
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - text: IEnumerable
    url: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
- h2: Properties
- api3: Count
  id: DataLinq_Instances_IImmutableRelation_1_Count
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L16
  metadata:
    uid: DataLinq.Instances.IImmutableRelation`1.Count
    commentId: P:DataLinq.Instances.IImmutableRelation`1.Count
- code: int Count { get; }
- h4: Property Value
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: Keys
  id: DataLinq_Instances_IImmutableRelation_1_Keys
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L17
  metadata:
    uid: DataLinq.Instances.IImmutableRelation`1.Keys
    commentId: P:DataLinq.Instances.IImmutableRelation`1.Keys
- code: ImmutableArray<IKey> Keys { get; }
- h4: Property Value
- parameters:
  - type:
    - text: ImmutableArray
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
    - <
    - text: IKey
      url: DataLinq.Instances.IKey.html
    - '>'
- api3: Values
  id: DataLinq_Instances_IImmutableRelation_1_Values
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L18
  metadata:
    uid: DataLinq.Instances.IImmutableRelation`1.Values
    commentId: P:DataLinq.Instances.IImmutableRelation`1.Values
- code: ImmutableArray<T> Values { get; }
- h4: Property Value
- parameters:
  - type:
    - text: ImmutableArray
      url: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
    - <
    - T
    - '>'
- api3: this[IKey]
  id: DataLinq_Instances_IImmutableRelation_1_Item_DataLinq_Instances_IKey_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L14
  metadata:
    uid: DataLinq.Instances.IImmutableRelation`1.Item(DataLinq.Instances.IKey)
    commentId: P:DataLinq.Instances.IImmutableRelation`1.Item(DataLinq.Instances.IKey)
- code: T? this[IKey key] { get; }
- h4: Property Value
- parameters:
  - type:
    - T
    - '?'
- h2: Methods
- api3: AsEnumerable()
  id: DataLinq_Instances_IImmutableRelation_1_AsEnumerable
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L20
  metadata:
    uid: DataLinq.Instances.IImmutableRelation`1.AsEnumerable
    commentId: M:DataLinq.Instances.IImmutableRelation`1.AsEnumerable
- code: IEnumerable<KeyValuePair<IKey, T>> AsEnumerable()
- h4: Returns
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - text: KeyValuePair
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
    - <
    - text: IKey
      url: DataLinq.Instances.IKey.html
    - ','
    - " "
    - T
    - '>'
    - '>'
- api3: Clear()
  id: DataLinq_Instances_IImmutableRelation_1_Clear
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L21
  metadata:
    uid: DataLinq.Instances.IImmutableRelation`1.Clear
    commentId: M:DataLinq.Instances.IImmutableRelation`1.Clear
- code: void Clear()
- api3: ContainsKey(IKey)
  id: DataLinq_Instances_IImmutableRelation_1_ContainsKey_DataLinq_Instances_IKey_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L22
  metadata:
    uid: DataLinq.Instances.IImmutableRelation`1.ContainsKey(DataLinq.Instances.IKey)
    commentId: M:DataLinq.Instances.IImmutableRelation`1.ContainsKey(DataLinq.Instances.IKey)
- code: bool ContainsKey(IKey key)
- h4: Parameters
- parameters:
  - name: key
    type:
    - text: IKey
      url: DataLinq.Instances.IKey.html
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: Get(IKey)
  id: DataLinq_Instances_IImmutableRelation_1_Get_DataLinq_Instances_IKey_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L23
  metadata:
    uid: DataLinq.Instances.IImmutableRelation`1.Get(DataLinq.Instances.IKey)
    commentId: M:DataLinq.Instances.IImmutableRelation`1.Get(DataLinq.Instances.IKey)
- code: T? Get(IKey key)
- h4: Parameters
- parameters:
  - name: key
    type:
    - text: IKey
      url: DataLinq.Instances.IKey.html
- h4: Returns
- parameters:
  - type:
    - T
    - '?'
- api3: ToFrozenDictionary()
  id: DataLinq_Instances_IImmutableRelation_1_ToFrozenDictionary
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Instances/ImmutableRelation.cs#L24
  metadata:
    uid: DataLinq.Instances.IImmutableRelation`1.ToFrozenDictionary
    commentId: M:DataLinq.Instances.IImmutableRelation`1.ToFrozenDictionary
- code: FrozenDictionary<IKey, T> ToFrozenDictionary()
- h4: Returns
- parameters:
  - type:
    - text: FrozenDictionary
      url: https://learn.microsoft.com/dotnet/api/system.collections.frozen.frozendictionary-2
    - <
    - text: IKey
      url: DataLinq.Instances.IKey.html
    - ','
    - " "
    - T
    - '>'
languageId: csharp
