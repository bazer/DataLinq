### YamlMime:ApiPage
title: Class RowCache
body:
- api1: Class RowCache
  id: DataLinq_Cache_RowCache
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/RowCache.cs#L10
  metadata:
    uid: DataLinq.Cache.RowCache
    commentId: T:DataLinq.Cache.RowCache
- facts:
  - name: Namespace
    value:
      text: DataLinq.Cache
      url: DataLinq.Cache.html
  - name: Assembly
    value: DataLinq.dll
- code: public class RowCache
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: RowCache
    url: DataLinq.Cache.RowCache.html
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Fields
- api3: rows
  id: DataLinq_Cache_RowCache_rows
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/RowCache.cs#L16
  metadata:
    uid: DataLinq.Cache.RowCache.rows
    commentId: F:DataLinq.Cache.RowCache.rows
- code: protected ConcurrentDictionary<IKey, IImmutableInstance> rows
- h4: Field Value
- parameters:
  - type:
    - text: ConcurrentDictionary
      url: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2
    - <
    - text: IKey
      url: DataLinq.Instances.IKey.html
    - ','
    - " "
    - text: IImmutableInstance
      url: DataLinq.Instances.IImmutableInstance.html
    - '>'
- h2: Properties
- api3: Count
  id: DataLinq_Cache_RowCache_Count
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/RowCache.cs#L19
  metadata:
    uid: DataLinq.Cache.RowCache.Count
    commentId: P:DataLinq.Cache.RowCache.Count
- code: public int Count { get; }
- h4: Property Value
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: NewestTick
  id: DataLinq_Cache_RowCache_NewestTick
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/RowCache.cs#L22
  metadata:
    uid: DataLinq.Cache.RowCache.NewestTick
    commentId: P:DataLinq.Cache.RowCache.NewestTick
- code: public long? NewestTick { get; }
- h4: Property Value
- parameters:
  - type:
    - text: long
      url: https://learn.microsoft.com/dotnet/api/system.int64
    - '?'
- api3: OldestTick
  id: DataLinq_Cache_RowCache_OldestTick
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/RowCache.cs#L21
  metadata:
    uid: DataLinq.Cache.RowCache.OldestTick
    commentId: P:DataLinq.Cache.RowCache.OldestTick
- code: public long? OldestTick { get; }
- h4: Property Value
- parameters:
  - type:
    - text: long
      url: https://learn.microsoft.com/dotnet/api/system.int64
    - '?'
- api3: Rows
  id: DataLinq_Cache_RowCache_Rows
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/RowCache.cs#L18
  metadata:
    uid: DataLinq.Cache.RowCache.Rows
    commentId: P:DataLinq.Cache.RowCache.Rows
- code: public IEnumerable<IImmutableInstance> Rows { get; }
- h4: Property Value
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - text: IImmutableInstance
      url: DataLinq.Instances.IImmutableInstance.html
    - '>'
- api3: TotalBytes
  id: DataLinq_Cache_RowCache_TotalBytes
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/RowCache.cs#L40
  metadata:
    uid: DataLinq.Cache.RowCache.TotalBytes
    commentId: P:DataLinq.Cache.RowCache.TotalBytes
- code: public long TotalBytes { get; }
- h4: Property Value
- parameters:
  - type:
    - text: long
      url: https://learn.microsoft.com/dotnet/api/system.int64
- api3: TotalBytesFormatted
  id: DataLinq_Cache_RowCache_TotalBytesFormatted
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/RowCache.cs#L51
  metadata:
    uid: DataLinq.Cache.RowCache.TotalBytesFormatted
    commentId: P:DataLinq.Cache.RowCache.TotalBytesFormatted
- code: public string TotalBytesFormatted { get; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- h2: Methods
- api3: ClearRows()
  id: DataLinq_Cache_RowCache_ClearRows
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/RowCache.cs#L53
  metadata:
    uid: DataLinq.Cache.RowCache.ClearRows
    commentId: M:DataLinq.Cache.RowCache.ClearRows
- code: public void ClearRows()
- api3: RemoveRowsInsertedBeforeTick(long)
  id: DataLinq_Cache_RowCache_RemoveRowsInsertedBeforeTick_System_Int64_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/RowCache.cs#L139
  metadata:
    uid: DataLinq.Cache.RowCache.RemoveRowsInsertedBeforeTick(System.Int64)
    commentId: M:DataLinq.Cache.RowCache.RemoveRowsInsertedBeforeTick(System.Int64)
- code: public int RemoveRowsInsertedBeforeTick(long tick)
- h4: Parameters
- parameters:
  - name: tick
    type:
    - text: long
      url: https://learn.microsoft.com/dotnet/api/system.int64
- h4: Returns
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: RemoveRowsOverRowLimit(int)
  id: DataLinq_Cache_RowCache_RemoveRowsOverRowLimit_System_Int32_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/RowCache.cs#L63
  metadata:
    uid: DataLinq.Cache.RowCache.RemoveRowsOverRowLimit(System.Int32)
    commentId: M:DataLinq.Cache.RowCache.RemoveRowsOverRowLimit(System.Int32)
- code: public int RemoveRowsOverRowLimit(int maxRows)
- h4: Parameters
- parameters:
  - name: maxRows
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- h4: Returns
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: RemoveRowsOverSizeLimit(long)
  id: DataLinq_Cache_RowCache_RemoveRowsOverSizeLimit_System_Int64_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/RowCache.cs#L101
  metadata:
    uid: DataLinq.Cache.RowCache.RemoveRowsOverSizeLimit(System.Int64)
    commentId: M:DataLinq.Cache.RowCache.RemoveRowsOverSizeLimit(System.Int64)
- code: public int RemoveRowsOverSizeLimit(long maxSize)
- h4: Parameters
- parameters:
  - name: maxSize
    type:
    - text: long
      url: https://learn.microsoft.com/dotnet/api/system.int64
- h4: Returns
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: TryAddRow(IKey, RowData, IImmutableInstance)
  id: DataLinq_Cache_RowCache_TryAddRow_DataLinq_Instances_IKey_DataLinq_Instances_RowData_DataLinq_Instances_IImmutableInstance_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/RowCache.cs#L191
  metadata:
    uid: DataLinq.Cache.RowCache.TryAddRow(DataLinq.Instances.IKey,DataLinq.Instances.RowData,DataLinq.Instances.IImmutableInstance)
    commentId: M:DataLinq.Cache.RowCache.TryAddRow(DataLinq.Instances.IKey,DataLinq.Instances.RowData,DataLinq.Instances.IImmutableInstance)
- code: public bool TryAddRow(IKey keys, RowData data, IImmutableInstance instance)
- h4: Parameters
- parameters:
  - name: keys
    type:
    - text: IKey
      url: DataLinq.Instances.IKey.html
  - name: data
    type:
    - text: RowData
      url: DataLinq.Instances.RowData.html
  - name: instance
    type:
    - text: IImmutableInstance
      url: DataLinq.Instances.IImmutableInstance.html
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: TryGetValue(IKey, out IImmutableInstance?)
  id: DataLinq_Cache_RowCache_TryGetValue_DataLinq_Instances_IKey_DataLinq_Instances_IImmutableInstance__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/RowCache.cs#L171
  metadata:
    uid: DataLinq.Cache.RowCache.TryGetValue(DataLinq.Instances.IKey,DataLinq.Instances.IImmutableInstance@)
    commentId: M:DataLinq.Cache.RowCache.TryGetValue(DataLinq.Instances.IKey,DataLinq.Instances.IImmutableInstance@)
- code: public bool TryGetValue(IKey primaryKeys, out IImmutableInstance? row)
- h4: Parameters
- parameters:
  - name: primaryKeys
    type:
    - text: IKey
      url: DataLinq.Instances.IKey.html
  - name: row
    type:
    - text: IImmutableInstance
      url: DataLinq.Instances.IImmutableInstance.html
    - '?'
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: TryRemoveRow(IKey, out int)
  id: DataLinq_Cache_RowCache_TryRemoveRow_DataLinq_Instances_IKey_System_Int32__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Cache/RowCache.cs#L173
  metadata:
    uid: DataLinq.Cache.RowCache.TryRemoveRow(DataLinq.Instances.IKey,System.Int32@)
    commentId: M:DataLinq.Cache.RowCache.TryRemoveRow(DataLinq.Instances.IKey,System.Int32@)
- code: public bool TryRemoveRow(IKey primaryKeys, out int numRowsRemoved)
- h4: Parameters
- parameters:
  - name: primaryKeys
    type:
    - text: IKey
      url: DataLinq.Instances.IKey.html
  - name: numRowsRemoved
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
languageId: csharp
