### YamlMime:ApiPage
title: Class Select<T>
body:
- api1: Class Select<T>
  id: DataLinq_Query_Select_1
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L12
  metadata:
    uid: DataLinq.Query.Select`1
    commentId: T:DataLinq.Query.Select`1
- facts:
  - name: Namespace
    value:
      text: DataLinq.Query
      url: DataLinq.Query.html
  - name: Assembly
    value: DataLinq.dll
- code: 'public class Select<T> : IQuery'
- h4: Type Parameters
- parameters:
  - name: T
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: Select<T>
    url: DataLinq.Query.Select-1.html
- h4: Implements
- list:
  - text: IQuery
    url: DataLinq.Query.IQuery.html
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: Select(SqlQuery<T>)
  id: DataLinq_Query_Select_1__ctor_DataLinq_Query_SqlQuery__0__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L17
  metadata:
    uid: DataLinq.Query.Select`1.#ctor(DataLinq.Query.SqlQuery{`0})
    commentId: M:DataLinq.Query.Select`1.#ctor(DataLinq.Query.SqlQuery{`0})
- code: public Select(SqlQuery<T> query)
- h4: Parameters
- parameters:
  - name: query
    type:
    - text: SqlQuery
      url: DataLinq.Query.SqlQuery-1.html
    - <
    - T
    - '>'
- h2: Fields
- api3: query
  id: DataLinq_Query_Select_1_query
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L14
  metadata:
    uid: DataLinq.Query.Select`1.query
    commentId: F:DataLinq.Query.Select`1.query
- code: protected readonly SqlQuery<T> query
- h4: Field Value
- parameters:
  - type:
    - text: SqlQuery
      url: DataLinq.Query.SqlQuery-1.html
    - <
    - T
    - '>'
- h2: Properties
- api3: Query
  id: DataLinq_Query_Select_1_Query
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L15
  metadata:
    uid: DataLinq.Query.Select`1.Query
    commentId: P:DataLinq.Query.Select`1.Query
- code: public SqlQuery<T> Query { get; }
- h4: Property Value
- parameters:
  - type:
    - text: SqlQuery
      url: DataLinq.Query.SqlQuery-1.html
    - <
    - T
    - '>'
- h2: Methods
- api3: Execute()
  id: DataLinq_Query_Select_1_Execute
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L94
  metadata:
    uid: DataLinq.Query.Select`1.Execute
    commentId: M:DataLinq.Query.Select`1.Execute
- code: public IEnumerable<IImmutableInstance> Execute()
- h4: Returns
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - text: IImmutableInstance
      url: DataLinq.Instances.IImmutableInstance.html
    - '>'
- api3: ExecuteAs<V>()
  id: DataLinq_Query_Select_1_ExecuteAs__1
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L91
  metadata:
    uid: DataLinq.Query.Select`1.ExecuteAs``1
    commentId: M:DataLinq.Query.Select`1.ExecuteAs``1
- code: public IEnumerable<V> ExecuteAs<V>()
- h4: Returns
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - V
    - '>'
- h4: Type Parameters
- parameters:
  - name: V
- api3: ExecuteScalar<V>()
  id: DataLinq_Query_Select_1_ExecuteScalar__1
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L118
  metadata:
    uid: DataLinq.Query.Select`1.ExecuteScalar``1
    commentId: M:DataLinq.Query.Select`1.ExecuteScalar``1
- code: public V ExecuteScalar<V>()
- h4: Returns
- parameters:
  - type:
    - V
- h4: Type Parameters
- parameters:
  - name: V
- api3: ExecuteScalar()
  id: DataLinq_Query_Select_1_ExecuteScalar
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L123
  metadata:
    uid: DataLinq.Query.Select`1.ExecuteScalar
    commentId: M:DataLinq.Query.Select`1.ExecuteScalar
- code: public object? ExecuteScalar()
- h4: Returns
- parameters:
  - type:
    - text: object
      url: https://learn.microsoft.com/dotnet/api/system.object
    - '?'
- api3: ReadKeys()
  id: DataLinq_Query_Select_1_ReadKeys
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L70
  metadata:
    uid: DataLinq.Query.Select`1.ReadKeys
    commentId: M:DataLinq.Query.Select`1.ReadKeys
- code: public IEnumerable<IKey> ReadKeys()
- h4: Returns
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - text: IKey
      url: DataLinq.Instances.IKey.html
    - '>'
- api3: ReadPrimaryAndForeignKeys(ColumnIndex)
  id: DataLinq_Query_Select_1_ReadPrimaryAndForeignKeys_DataLinq_Metadata_ColumnIndex_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L82
  metadata:
    uid: DataLinq.Query.Select`1.ReadPrimaryAndForeignKeys(DataLinq.Metadata.ColumnIndex)
    commentId: M:DataLinq.Query.Select`1.ReadPrimaryAndForeignKeys(DataLinq.Metadata.ColumnIndex)
- code: public IEnumerable<(IKey fk, IKey[] pks)> ReadPrimaryAndForeignKeys(ColumnIndex foreignKeyIndex)
- h4: Parameters
- parameters:
  - name: foreignKeyIndex
    type:
    - ColumnIndex
- h4: Returns
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - (
    - text: IKey
      url: DataLinq.Instances.IKey.html
    - " "
    - text: fk
      url: https://learn.microsoft.com/dotnet/api/system.valuetuple-datalinq.instances.ikey,datalinq.instances.ikey[]-.fk
    - ','
    - " "
    - text: IKey
      url: DataLinq.Instances.IKey.html
    - '['
    - ']'
    - " "
    - text: pks
      url: https://learn.microsoft.com/dotnet/api/system.valuetuple-datalinq.instances.ikey,datalinq.instances.ikey[]-.pks
    - )
    - '>'
- api3: ReadReader()
  id: DataLinq_Query_Select_1_ReadReader
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L57
  metadata:
    uid: DataLinq.Query.Select`1.ReadReader
    commentId: M:DataLinq.Query.Select`1.ReadReader
- code: public IEnumerable<IDataLinqDataReader> ReadReader()
- h4: Returns
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - text: IDataLinqDataReader
      url: DataLinq.IDataLinqDataReader.html
    - '>'
- api3: ReadRows()
  id: DataLinq_Query_Select_1_ReadRows
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L64
  metadata:
    uid: DataLinq.Query.Select`1.ReadRows
    commentId: M:DataLinq.Query.Select`1.ReadRows
- code: public IEnumerable<RowData> ReadRows()
- h4: Returns
- parameters:
  - type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - text: RowData
      url: DataLinq.Instances.RowData.html
    - '>'
- api3: ToDbCommand()
  id: DataLinq_Query_Select_1_ToDbCommand
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L38
  metadata:
    uid: DataLinq.Query.Select`1.ToDbCommand
    commentId: M:DataLinq.Query.Select`1.ToDbCommand
- code: public IDbCommand ToDbCommand()
- h4: Returns
- parameters:
  - type:
    - text: IDbCommand
      url: https://learn.microsoft.com/dotnet/api/system.data.idbcommand
- api3: ToSql(string?)
  id: DataLinq_Query_Select_1_ToSql_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L22
  metadata:
    uid: DataLinq.Query.Select`1.ToSql(System.String)
    commentId: M:DataLinq.Query.Select`1.ToSql(System.String)
- code: public Sql ToSql(string? paramPrefix = null)
- h4: Parameters
- parameters:
  - name: paramPrefix
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: Sql
      url: DataLinq.Query.Sql.html
- api3: ToString()
  id: DataLinq_Query_Select_1_ToString
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L128
  metadata:
    uid: DataLinq.Query.Select`1.ToString
    commentId: M:DataLinq.Query.Select`1.ToString
- markdown: Returns a string that represents the current object.
- code: public override string ToString()
- h4: Returns
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: A string that represents the current object.
- api3: What(IEnumerable<ColumnDefinition>)
  id: DataLinq_Query_Select_1_What_System_Collections_Generic_IEnumerable_DataLinq_Metadata_ColumnDefinition__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L43
  metadata:
    uid: DataLinq.Query.Select`1.What(System.Collections.Generic.IEnumerable{DataLinq.Metadata.ColumnDefinition})
    commentId: M:DataLinq.Query.Select`1.What(System.Collections.Generic.IEnumerable{DataLinq.Metadata.ColumnDefinition})
- code: public Select<T> What(IEnumerable<ColumnDefinition> columns)
- h4: Parameters
- parameters:
  - name: columns
    type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - ColumnDefinition
    - '>'
- h4: Returns
- parameters:
  - type:
    - text: Select
      url: DataLinq.Query.Select-1.html
    - <
    - T
    - '>'
- api3: What(params string[])
  id: DataLinq_Query_Select_1_What_System_String___
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Query/Select.cs#L50
  metadata:
    uid: DataLinq.Query.Select`1.What(System.String[])
    commentId: M:DataLinq.Query.Select`1.What(System.String[])
- code: public Select<T> What(params string[] selectors)
- h4: Parameters
- parameters:
  - name: selectors
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '['
    - ']'
- h4: Returns
- parameters:
  - type:
    - text: Select
      url: DataLinq.Query.Select-1.html
    - <
    - T
    - '>'
languageId: csharp
