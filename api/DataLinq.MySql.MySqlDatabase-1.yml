### YamlMime:ApiPage
title: Class MySqlDatabase<T>
body:
- api1: Class MySqlDatabase<T>
  id: DataLinq_MySql_MySqlDatabase_1
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/MySqlDatabase.cs#L52
  metadata:
    uid: DataLinq.MySql.MySqlDatabase`1
    commentId: T:DataLinq.MySql.MySqlDatabase`1
- facts:
  - name: Namespace
    value:
      text: DataLinq.MySql
      url: DataLinq.MySql.html
  - name: Assembly
    value: DataLinq.MySql.dll
- markdown: Represents a MySQL database provider specific to a given database model type.
- code: 'public class MySqlDatabase<T> : Database<T>, IDisposable where T : class, IDatabaseModel'
- h4: Type Parameters
- parameters:
  - name: T
    description: The type of the database model.
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: Database<T>
    url: DataLinq.Database-1.html
  - text: MySqlDatabase<T>
    url: DataLinq.MySql.MySqlDatabase-1.html
- h4: Implements
- list:
  - text: IDisposable
    url: https://learn.microsoft.com/dotnet/api/system.idisposable
- h4: Inherited Members
- list:
  - text: Database<T>.DatabaseType
    url: DataLinq.Database-1.html#DataLinq_Database_1_DatabaseType
  - text: Database<T>.Provider
    url: DataLinq.Database-1.html#DataLinq_Database_1_Provider
  - text: Database<T>.FileOrServerExists()
    url: DataLinq.Database-1.html#DataLinq_Database_1_FileOrServerExists
  - text: Database<T>.Exists(string?)
    url: DataLinq.Database-1.html#DataLinq_Database_1_Exists_System_String_
  - text: Database<T>.Transaction(TransactionType)
    url: DataLinq.Database-1.html#DataLinq_Database_1_Transaction_DataLinq_Mutation_TransactionType_
  - text: Database<T>.AttachTransaction(IDbTransaction, TransactionType)
    url: DataLinq.Database-1.html#DataLinq_Database_1_AttachTransaction_System_Data_IDbTransaction_DataLinq_Mutation_TransactionType_
  - text: Database<T>.Query()
    url: DataLinq.Database-1.html#DataLinq_Database_1_Query
  - text: Database<T>.From(string, string?)
    url: DataLinq.Database-1.html#DataLinq_Database_1_From_System_String_System_String_
  - text: Database<T>.From(TableDefinition, string?)
    url: DataLinq.Database-1.html#DataLinq_Database_1_From_DataLinq_Metadata_TableDefinition_System_String_
  - text: Database<T>.From<V>()
    url: DataLinq.Database-1.html#DataLinq_Database_1_From__1
  - text: Database<T>.Get<M>(IKey)
    url: DataLinq.Database-1.html#DataLinq_Database_1_Get__1_DataLinq_Instances_IKey_
  - text: Database<T>.Insert<M>(Mutable<M>, TransactionType)
    url: DataLinq.Database-1.html#DataLinq_Database_1_Insert__1_DataLinq_Instances_Mutable___0__DataLinq_Mutation_TransactionType_
  - text: Database<T>.Update<M>(Mutable<M>, TransactionType)
    url: DataLinq.Database-1.html#DataLinq_Database_1_Update__1_DataLinq_Instances_Mutable___0__DataLinq_Mutation_TransactionType_
  - text: Database<T>.Save<M>(Mutable<M>, TransactionType)
    url: DataLinq.Database-1.html#DataLinq_Database_1_Save__1_DataLinq_Instances_Mutable___0__DataLinq_Mutation_TransactionType_
  - text: Database<T>.Delete<M>(M, TransactionType)
    url: DataLinq.Database-1.html#DataLinq_Database_1_Delete__1___0_DataLinq_Mutation_TransactionType_
  - text: Database<T>.Commit(Action<Transaction>, TransactionType)
    url: DataLinq.Database-1.html#DataLinq_Database_1_Commit_System_Action_DataLinq_Mutation_Transaction__DataLinq_Mutation_TransactionType_
  - text: Database<T>.Commit<M>(Func<Transaction, M>, TransactionType)
    url: DataLinq.Database-1.html#DataLinq_Database_1_Commit__1_System_Func_DataLinq_Mutation_Transaction___0__DataLinq_Mutation_TransactionType_
  - text: Database<T>.Dispose()
    url: DataLinq.Database-1.html#DataLinq_Database_1_Dispose
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: MySqlDatabase(string)
  id: DataLinq_MySql_MySqlDatabase_1__ctor_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/MySqlDatabase.cs#L59
  metadata:
    uid: DataLinq.MySql.MySqlDatabase`1.#ctor(System.String)
    commentId: M:DataLinq.MySql.MySqlDatabase`1.#ctor(System.String)
- markdown: Initializes a new instance of the MySqlDatabase with the specified connection string.
- code: public MySqlDatabase(string connectionString)
- h4: Parameters
- parameters:
  - name: connectionString
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The connection string for the MySQL database.
- api3: MySqlDatabase(string, ILoggerFactory?)
  id: DataLinq_MySql_MySqlDatabase_1__ctor_System_String_Microsoft_Extensions_Logging_ILoggerFactory_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/MySqlDatabase.cs#L68
  metadata:
    uid: DataLinq.MySql.MySqlDatabase`1.#ctor(System.String,Microsoft.Extensions.Logging.ILoggerFactory)
    commentId: M:DataLinq.MySql.MySqlDatabase`1.#ctor(System.String,Microsoft.Extensions.Logging.ILoggerFactory)
- markdown: Initializes a new instance of the MySqlDatabase with the specified connection string and logger factory.
- code: public MySqlDatabase(string connectionString, ILoggerFactory? loggerFactory)
- h4: Parameters
- parameters:
  - name: connectionString
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The connection string for the MySQL database.
  - name: loggerFactory
    type:
    - text: ILoggerFactory
      url: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.iloggerfactory
    - '?'
    description: The logger factory to use for logging.
- api3: MySqlDatabase(string, string)
  id: DataLinq_MySql_MySqlDatabase_1__ctor_System_String_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/MySqlDatabase.cs#L77
  metadata:
    uid: DataLinq.MySql.MySqlDatabase`1.#ctor(System.String,System.String)
    commentId: M:DataLinq.MySql.MySqlDatabase`1.#ctor(System.String,System.String)
- markdown: Initializes a new instance of the MySqlDatabase with the specified connection string and database name.
- code: public MySqlDatabase(string connectionString, string databaseName)
- h4: Parameters
- parameters:
  - name: connectionString
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The connection string for the MySQL database.
  - name: databaseName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The name of the database.
- api3: MySqlDatabase(string, string, ILoggerFactory?)
  id: DataLinq_MySql_MySqlDatabase_1__ctor_System_String_System_String_Microsoft_Extensions_Logging_ILoggerFactory_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq.MySql/MySqlDatabase.cs#L87
  metadata:
    uid: DataLinq.MySql.MySqlDatabase`1.#ctor(System.String,System.String,Microsoft.Extensions.Logging.ILoggerFactory)
    commentId: M:DataLinq.MySql.MySqlDatabase`1.#ctor(System.String,System.String,Microsoft.Extensions.Logging.ILoggerFactory)
- markdown: Initializes a new instance of the MySqlDatabase with the specified connection string, database name and logger factory.
- code: public MySqlDatabase(string connectionString, string databaseName, ILoggerFactory? loggerFactory)
- h4: Parameters
- parameters:
  - name: connectionString
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The connection string for the MySQL database.
  - name: databaseName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The name of the database.
  - name: loggerFactory
    type:
    - text: ILoggerFactory
      url: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.iloggerfactory
    - '?'
    description: The logger factory to use for logging.
languageId: csharp
metadata:
  description: Represents a MySQL database provider specific to a given database model type.
