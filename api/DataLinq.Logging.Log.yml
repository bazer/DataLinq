### YamlMime:ApiPage
title: Class Log
body:
- api1: Class Log
  id: DataLinq_Logging_Log
  metadata:
    uid: DataLinq.Logging.Log
    commentId: T:DataLinq.Logging.Log
- facts:
  - name: Namespace
    value:
      text: DataLinq.Logging
      url: DataLinq.Logging.html
  - name: Assembly
    value: DataLinq.dll
- code: public static class Log
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: Log
    url: DataLinq.Logging.Log.html
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Methods
- api3: IndexCachePreload(ILogger, ColumnIndex, int)
  id: DataLinq_Logging_Log_IndexCachePreload_Microsoft_Extensions_Logging_ILogger_DataLinq_Metadata_ColumnIndex_System_Int32_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Logging/Log.cs#L20
  metadata:
    uid: DataLinq.Logging.Log.IndexCachePreload(Microsoft.Extensions.Logging.ILogger,DataLinq.Metadata.ColumnIndex,System.Int32)
    commentId: M:DataLinq.Logging.Log.IndexCachePreload(Microsoft.Extensions.Logging.ILogger,DataLinq.Metadata.ColumnIndex,System.Int32)
- code: >-
    [LoggerMessage(2000, LogLevel.Debug, "Preloaded {rowsLoaded} keys to index cache: {index}")]

    public static void IndexCachePreload(ILogger logger, ColumnIndex index, int rowsLoaded)
- h4: Parameters
- parameters:
  - name: logger
    type:
    - text: ILogger
      url: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  - name: index
    type:
    - ColumnIndex
  - name: rowsLoaded
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: LoadRowsFromCache(ILogger, TableDefinition, int)
  id: DataLinq_Logging_Log_LoadRowsFromCache_Microsoft_Extensions_Logging_ILogger_DataLinq_Metadata_TableDefinition_System_Int32_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Logging/Log.cs#L26
  metadata:
    uid: DataLinq.Logging.Log.LoadRowsFromCache(Microsoft.Extensions.Logging.ILogger,DataLinq.Metadata.TableDefinition,System.Int32)
    commentId: M:DataLinq.Logging.Log.LoadRowsFromCache(Microsoft.Extensions.Logging.ILogger,DataLinq.Metadata.TableDefinition,System.Int32)
- code: >-
    [LoggerMessage(2002, LogLevel.Debug, "Fetched {rowsLoaded} rows from table cache: {table}")]

    public static void LoadRowsFromCache(ILogger logger, TableDefinition table, int rowsLoaded)
- h4: Parameters
- parameters:
  - name: logger
    type:
    - text: ILogger
      url: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  - name: table
    type:
    - TableDefinition
  - name: rowsLoaded
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: LoadRowsFromDatabase(ILogger, TableDefinition, int)
  id: DataLinq_Logging_Log_LoadRowsFromDatabase_Microsoft_Extensions_Logging_ILogger_DataLinq_Metadata_TableDefinition_System_Int32_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Logging/Log.cs#L29
  metadata:
    uid: DataLinq.Logging.Log.LoadRowsFromDatabase(Microsoft.Extensions.Logging.ILogger,DataLinq.Metadata.TableDefinition,System.Int32)
    commentId: M:DataLinq.Logging.Log.LoadRowsFromDatabase(Microsoft.Extensions.Logging.ILogger,DataLinq.Metadata.TableDefinition,System.Int32)
- code: >-
    [LoggerMessage(2003, LogLevel.Debug, "Fetched {rowsLoaded} rows from database and added to table cache: {table}")]

    public static void LoadRowsFromDatabase(ILogger logger, TableDefinition table, int rowsLoaded)
- h4: Parameters
- parameters:
  - name: logger
    type:
    - text: ILogger
      url: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  - name: table
    type:
    - TableDefinition
  - name: rowsLoaded
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: RowCachePreload(ILogger, TableDefinition, int)
  id: DataLinq_Logging_Log_RowCachePreload_Microsoft_Extensions_Logging_ILogger_DataLinq_Metadata_TableDefinition_System_Int32_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Logging/Log.cs#L23
  metadata:
    uid: DataLinq.Logging.Log.RowCachePreload(Microsoft.Extensions.Logging.ILogger,DataLinq.Metadata.TableDefinition,System.Int32)
    commentId: M:DataLinq.Logging.Log.RowCachePreload(Microsoft.Extensions.Logging.ILogger,DataLinq.Metadata.TableDefinition,System.Int32)
- code: >-
    [LoggerMessage(2001, LogLevel.Debug, "Preloaded {rowsLoaded} rows to table cache: {table}")]

    public static void RowCachePreload(ILogger logger, TableDefinition table, int rowsLoaded)
- h4: Parameters
- parameters:
  - name: logger
    type:
    - text: ILogger
      url: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  - name: table
    type:
    - TableDefinition
  - name: rowsLoaded
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: Sql(ILogger, string)
  id: DataLinq_Logging_Log_Sql_Microsoft_Extensions_Logging_ILogger_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Logging/Log.cs#L11
  metadata:
    uid: DataLinq.Logging.Log.Sql(Microsoft.Extensions.Logging.ILogger,System.String)
    commentId: M:DataLinq.Logging.Log.Sql(Microsoft.Extensions.Logging.ILogger,System.String)
- code: >-
    [LoggerMessage(1000, LogLevel.Debug, "{sql}")]

    public static void Sql(ILogger logger, string sql)
- h4: Parameters
- parameters:
  - name: logger
    type:
    - text: ILogger
      url: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  - name: sql
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: SqlCommand(ILogger, IDbCommand)
  id: DataLinq_Logging_Log_SqlCommand_Microsoft_Extensions_Logging_ILogger_System_Data_IDbCommand_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Logging/Log.cs#L14
  metadata:
    uid: DataLinq.Logging.Log.SqlCommand(Microsoft.Extensions.Logging.ILogger,System.Data.IDbCommand)
    commentId: M:DataLinq.Logging.Log.SqlCommand(Microsoft.Extensions.Logging.ILogger,System.Data.IDbCommand)
- code: public static void SqlCommand(ILogger logger, IDbCommand command)
- h4: Parameters
- parameters:
  - name: logger
    type:
    - text: ILogger
      url: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  - name: command
    type:
    - text: IDbCommand
      url: https://learn.microsoft.com/dotnet/api/system.data.idbcommand
languageId: csharp
