### YamlMime:ApiPage
title: Class ReadOnlyAccess<T>
body:
- api1: Class ReadOnlyAccess<T>
  id: DataLinq_Mutation_ReadOnlyAccess_1
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Mutation/ReadOnlyAccess.cs#L67
  metadata:
    uid: DataLinq.Mutation.ReadOnlyAccess`1
    commentId: T:DataLinq.Mutation.ReadOnlyAccess`1
- facts:
  - name: Namespace
    value:
      text: DataLinq.Mutation
      url: DataLinq.Mutation.html
  - name: Assembly
    value: DataLinq.dll
- markdown: Represents a database transaction.
- code: 'public class ReadOnlyAccess<T> : ReadOnlyAccess, IDataSourceAccess where T : class, IDatabaseModel'
- h4: Type Parameters
- parameters:
  - name: T
    description: The type of the database model.
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: DataSourceAccess
    url: DataLinq.Mutation.DataSourceAccess.html
  - text: ReadOnlyAccess
    url: DataLinq.Mutation.ReadOnlyAccess.html
  - text: ReadOnlyAccess<T>
    url: DataLinq.Mutation.ReadOnlyAccess-1.html
- h4: Implements
- list:
  - IDataSourceAccess
- h4: Inherited Members
- list:
  - text: ReadOnlyAccess.DatabaseAccess
    url: DataLinq.Mutation.ReadOnlyAccess.html#DataLinq_Mutation_ReadOnlyAccess_DatabaseAccess
  - text: ReadOnlyAccess.GetFromQuery<T>(string)
    url: DataLinq.Mutation.ReadOnlyAccess.html#DataLinq_Mutation_ReadOnlyAccess_GetFromQuery__1_System_String_
  - text: ReadOnlyAccess.GetFromCommand<T>(IDbCommand)
    url: DataLinq.Mutation.ReadOnlyAccess.html#DataLinq_Mutation_ReadOnlyAccess_GetFromCommand__1_System_Data_IDbCommand_
  - text: DataSourceAccess.Provider
    url: DataLinq.Mutation.DataSourceAccess.html#DataLinq_Mutation_DataSourceAccess_Provider
  - text: DataSourceAccess.DatabaseAccess
    url: DataLinq.Mutation.DataSourceAccess.html#DataLinq_Mutation_DataSourceAccess_DatabaseAccess
  - text: DataSourceAccess.GetFromQuery<T>(string)
    url: DataLinq.Mutation.DataSourceAccess.html#DataLinq_Mutation_DataSourceAccess_GetFromQuery__1_System_String_
  - text: DataSourceAccess.GetFromCommand<T>(IDbCommand)
    url: DataLinq.Mutation.DataSourceAccess.html#DataLinq_Mutation_DataSourceAccess_GetFromCommand__1_System_Data_IDbCommand_
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: ReadOnlyAccess(DatabaseProvider<T>)
  id: DataLinq_Mutation_ReadOnlyAccess_1__ctor_DataLinq_DatabaseProvider__0__
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Mutation/ReadOnlyAccess.cs#L78
  metadata:
    uid: DataLinq.Mutation.ReadOnlyAccess`1.#ctor(DataLinq.DatabaseProvider{`0})
    commentId: M:DataLinq.Mutation.ReadOnlyAccess`1.#ctor(DataLinq.DatabaseProvider{`0})
- markdown: Initializes a new instance of the <xref href="DataLinq.Mutation.Transaction%601" data-throw-if-not-resolved="false"></xref> class.
- code: public ReadOnlyAccess(DatabaseProvider<T> databaseProvider)
- h4: Parameters
- parameters:
  - name: databaseProvider
    type:
    - text: DatabaseProvider
      url: DataLinq.DatabaseProvider-1.html
    - <
    - T
    - '>'
    description: The database provider.
- h2: Properties
- api3: Database
  id: DataLinq_Mutation_ReadOnlyAccess_1_Database
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Mutation/ReadOnlyAccess.cs#L72
  metadata:
    uid: DataLinq.Mutation.ReadOnlyAccess`1.Database
    commentId: P:DataLinq.Mutation.ReadOnlyAccess`1.Database
- markdown: Gets the database for the transaction.
- code: protected T Database { get; }
- h4: Property Value
- parameters:
  - type:
    - T
- h2: Methods
- api3: From(string)
  id: DataLinq_Mutation_ReadOnlyAccess_1_From_System_String_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Mutation/ReadOnlyAccess.cs#L94
  metadata:
    uid: DataLinq.Mutation.ReadOnlyAccess`1.From(System.String)
    commentId: M:DataLinq.Mutation.ReadOnlyAccess`1.From(System.String)
- markdown: Creates a new SQL query from the specified table name.
- code: public SqlQuery From(string tableName)
- h4: Parameters
- parameters:
  - name: tableName
    type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The name of the table.
- h4: Returns
- parameters:
  - type:
    - text: SqlQuery
      url: DataLinq.Query.SqlQuery.html
    description: The SQL query.
- api3: From(TableDefinition)
  id: DataLinq_Mutation_ReadOnlyAccess_1_From_DataLinq_Metadata_TableDefinition_
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Mutation/ReadOnlyAccess.cs#L106
  metadata:
    uid: DataLinq.Mutation.ReadOnlyAccess`1.From(DataLinq.Metadata.TableDefinition)
    commentId: M:DataLinq.Mutation.ReadOnlyAccess`1.From(DataLinq.Metadata.TableDefinition)
- markdown: Creates a new SQL query from the specified table metadata.
- code: public SqlQuery From(TableDefinition table)
- h4: Parameters
- parameters:
  - name: table
    type:
    - TableDefinition
    description: The table metadata.
- h4: Returns
- parameters:
  - type:
    - text: SqlQuery
      url: DataLinq.Query.SqlQuery.html
    description: The SQL query.
- api3: From<V>()
  id: DataLinq_Mutation_ReadOnlyAccess_1_From__1
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Mutation/ReadOnlyAccess.cs#L116
  metadata:
    uid: DataLinq.Mutation.ReadOnlyAccess`1.From``1
    commentId: M:DataLinq.Mutation.ReadOnlyAccess`1.From``1
- markdown: Creates a new SQL query from the specified model type.
- code: 'public SqlQuery<V> From<V>() where V : IModel'
- h4: Returns
- parameters:
  - type:
    - text: SqlQuery
      url: DataLinq.Query.SqlQuery-1.html
    - <
    - V
    - '>'
    description: The SQL query.
- h4: Type Parameters
- parameters:
  - name: V
    description: The type of the model.
- api3: Query()
  id: DataLinq_Mutation_ReadOnlyAccess_1_Query
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Mutation/ReadOnlyAccess.cs#L87
  metadata:
    uid: DataLinq.Mutation.ReadOnlyAccess`1.Query
    commentId: M:DataLinq.Mutation.ReadOnlyAccess`1.Query
- markdown: Gets the schema.
- code: public T Query()
- h4: Returns
- parameters:
  - type:
    - T
    description: The schema.
languageId: csharp
metadata:
  description: Represents a database transaction.
