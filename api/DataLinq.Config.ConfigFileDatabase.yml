### YamlMime:ApiPage
title: Class ConfigFileDatabase
body:
- api1: Class ConfigFileDatabase
  id: DataLinq_Config_ConfigFileDatabase
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L11
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase
    commentId: T:DataLinq.Config.ConfigFileDatabase
- facts:
  - name: Namespace
    value:
      text: DataLinq.Config
      url: DataLinq.Config.html
  - name: Assembly
    value: DataLinq.dll
- code: 'public record ConfigFileDatabase : IEquatable<ConfigFileDatabase>'
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: ConfigFileDatabase
    url: DataLinq.Config.ConfigFileDatabase.html
- h4: Implements
- list:
  - text: IEquatable<ConfigFileDatabase>
    url: https://learn.microsoft.com/dotnet/api/system.iequatable-1
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Properties
- api3: CapitalizeNames
  id: DataLinq_Config_ConfigFileDatabase_CapitalizeNames
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L23
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase.CapitalizeNames
    commentId: P:DataLinq.Config.ConfigFileDatabase.CapitalizeNames
- code: public bool? CapitalizeNames { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
- api3: Connections
  id: DataLinq_Config_ConfigFileDatabase_Connections
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L26
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase.Connections
    commentId: P:DataLinq.Config.ConfigFileDatabase.Connections
- code: public List<ConfigFileDatabaseConnection> Connections { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: List
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
    - <
    - text: ConfigFileDatabaseConnection
      url: DataLinq.Config.ConfigFileDatabaseConnection.html
    - '>'
- api3: CsType
  id: DataLinq_Config_ConfigFileDatabase_CsType
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L14
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase.CsType
    commentId: P:DataLinq.Config.ConfigFileDatabase.CsType
- code: public string? CsType { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
- api3: DestinationDirectory
  id: DataLinq_Config_ConfigFileDatabase_DestinationDirectory
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L17
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase.DestinationDirectory
    commentId: P:DataLinq.Config.ConfigFileDatabase.DestinationDirectory
- code: public string? DestinationDirectory { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
- api3: FileEncoding
  id: DataLinq_Config_ConfigFileDatabase_FileEncoding
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L27
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase.FileEncoding
    commentId: P:DataLinq.Config.ConfigFileDatabase.FileEncoding
- code: public string FileEncoding { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
- api3: Name
  id: DataLinq_Config_ConfigFileDatabase_Name
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L13
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase.Name
    commentId: P:DataLinq.Config.ConfigFileDatabase.Name
- code: public string? Name { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
- api3: Namespace
  id: DataLinq_Config_ConfigFileDatabase_Namespace
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L15
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase.Namespace
    commentId: P:DataLinq.Config.ConfigFileDatabase.Namespace
- code: public string? Namespace { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '?'
- api3: RemoveInterfacePrefix
  id: DataLinq_Config_ConfigFileDatabase_RemoveInterfacePrefix
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L24
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase.RemoveInterfacePrefix
    commentId: P:DataLinq.Config.ConfigFileDatabase.RemoveInterfacePrefix
- code: public bool? RemoveInterfacePrefix { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
- api3: SeparateTablesAndViews
  id: DataLinq_Config_ConfigFileDatabase_SeparateTablesAndViews
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L25
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase.SeparateTablesAndViews
    commentId: P:DataLinq.Config.ConfigFileDatabase.SeparateTablesAndViews
- code: public bool? SeparateTablesAndViews { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
- api3: SourceDirectories
  id: DataLinq_Config_ConfigFileDatabase_SourceDirectories
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L16
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase.SourceDirectories
    commentId: P:DataLinq.Config.ConfigFileDatabase.SourceDirectories
- code: public List<string>? SourceDirectories { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: List
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
- api3: Tables
  id: DataLinq_Config_ConfigFileDatabase_Tables
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L18
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase.Tables
    commentId: P:DataLinq.Config.ConfigFileDatabase.Tables
- code: public List<string>? Tables { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: List
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
- api3: UseFileScopedNamespaces
  id: DataLinq_Config_ConfigFileDatabase_UseFileScopedNamespaces
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L21
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase.UseFileScopedNamespaces
    commentId: P:DataLinq.Config.ConfigFileDatabase.UseFileScopedNamespaces
- code: public bool? UseFileScopedNamespaces { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
- api3: UseNullableReferenceTypes
  id: DataLinq_Config_ConfigFileDatabase_UseNullableReferenceTypes
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L22
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase.UseNullableReferenceTypes
    commentId: P:DataLinq.Config.ConfigFileDatabase.UseNullableReferenceTypes
- code: public bool? UseNullableReferenceTypes { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
- api3: UseRecord
  id: DataLinq_Config_ConfigFileDatabase_UseRecord
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L20
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase.UseRecord
    commentId: P:DataLinq.Config.ConfigFileDatabase.UseRecord
- code: public bool? UseRecord { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    - '?'
- api3: Views
  id: DataLinq_Config_ConfigFileDatabase_Views
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L19
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase.Views
    commentId: P:DataLinq.Config.ConfigFileDatabase.Views
- code: public List<string>? Views { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: List
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
    - <
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    - '>'
    - '?'
- h2: Methods
- api3: ParseFileEncoding()
  id: DataLinq_Config_ConfigFileDatabase_ParseFileEncoding
  src: https://github.com/bazer/DataLinq/blob/master/src/DataLinq/Config/ConfigFile.cs#L28
  metadata:
    uid: DataLinq.Config.ConfigFileDatabase.ParseFileEncoding
    commentId: M:DataLinq.Config.ConfigFileDatabase.ParseFileEncoding
- code: public Encoding ParseFileEncoding()
- h4: Returns
- parameters:
  - type:
    - text: Encoding
      url: https://learn.microsoft.com/dotnet/api/system.text.encoding
languageId: csharp
